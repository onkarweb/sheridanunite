{"version":3,"sources":["assets/img/sidebar-3.jpg","assets/img/faces/face-3.jpg","assets/img/group.jpg","assets/img/reactlogo.png","constants/nodeserver.js","assets/img/sidebar-1.jpg","variables/Variables.jsx","components/Header/HeaderLinks.jsx","components/Card/Card.jsx","components/StatsCard/StatsCard.jsx","components/CustomCheckbox/CustomCheckbox.jsx","components/CustomButton/CustomButton.jsx","components/Tasks/Tasks.jsx","views/Analytics/Analytics.jsx","components/FormInputs/FormInputs.jsx","components/UserCard/UserCard.jsx","views/Signup/Signup.jsx","components/Post/Post.jsx","views/PostList/PostList.jsx","views/Login/Login.jsx","components/UserTab/UserTab.jsx","views/Community/Community.jsx","routes/dashboard.jsx","views/ChatBox/ChatBox.jsx","views/Verification/Verification.jsx","views/FriendRequests/PendingRequests.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","components/Sidebar/Sidebar.jsx","routes/index.jsx","layouts/Dashboard/Dashboard.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","SERVER_URL","defaultWidth","window","screen","width","style","Wrapper","Containers","DefaultStyle","position","padding","zIndex","WebkitBoxSizing","MozBoxSizing","boxSizing","height","display","border","fontSize","WebkitFontSmoothing","fontFamily","fontWeight","color","tl","top","bottom","left","right","tr","tc","margin","marginLeft","bl","br","bc","NotificationItem","cursor","borderRadius","opacity","transition","WebkitTransform","transform","willChange","isHidden","isVisible","success","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","error","warning","info","Title","marginTop","MessageWrapper","marginRight","maxWidthwidth","Dismiss","float","lineHeight","outline","textAlign","Action","background","ActionWrapper","thArray","tdArray","iconsArray","dataPie","labels","series","legendPie","names","types","dataSales","optionsSales","low","high","showArea","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","responsiveSales","labelInterpolationFnc","value","legendSales","dataBar","optionsBar","seriesBarDistance","responsiveBar","legendBar","HeaderLinks","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchNotifications","currentUser","undefined","id","toString","length","fetch","method","headers","Content-Type","body","JSON","stringify","userid","then","response","json","ns","console","log","setState","notifications","catch","err","processDate","postCreated","d","Date","month","getMonth","hour","getHours","minutes","getMinutes","getDate","updateNotificationReadStatus","unreadCounter","state","forEach","n","i","is_read","result","toCommunity","prevProps","displayNotifications","_this2","react_default","a","createElement","MenuItem","map","className","key","message_body","create_time","borderBottom","notification","Nav","pullRight","NavDropdown","eventKey","title","noCaret","onFocus","onMouseDown","alt","verticalAlign","src","profileimageid","divider","onClick","logoutUser","Component","Card","_Component","apply","arguments","inherits","createClass","plain","hCenter","category","ctAllIcons","ctTableFullWidth","ctTableResponsive","ctTableUpgrade","content","legend","stats","statsIcon","StatsCard","Row","Col","xs","bigIcon","statsText","statsValue","statsIconText","CustomCheckbox","is_checked","isChecked","handleClick","bind","assertThisInitialized","_this$props","number","label","inline","rest","objectWithoutProperties","classes","assign","type","onChange","checked","htmlFor","CustomButton","fill","simple","round","block","btnClasses","cx","btn-fill","btn-simple","pull-right","btn-block","btn-round","Button","Tasks","_getPrototypeOf2","_len","args","Array","_key","concat","handleCheckbox","event","target","defineProperty","name","edit","Tooltip","remove","tasks_title","tasks","push","components_CustomCheckbox_CustomCheckbox","OverlayTrigger","placement","overlay","components_CustomButton_CustomButton","bsStyle","bsSize","FieldGroup","_ref","FormGroup","ControlLabel","FormControl","FormInputs","row","ncols","proprieties","UserCard","bgImage","href","avatar","userName","description","socials","Signup","handleSubmit","preventDefault","elements","_event$target$element","fname","lname","email","password1","password2","tagline","imagePublicId","firstName","lastName","password","document","getElementById","reset","uploadWidget","cloudinary","openUploadWidget","cloud_name","upload_preset","cropping","croppingAspectRatio","singleUploadAutoClose","thumbnails","clientAllowedFormats","maxFileSize","path","script","async","appendChild","uploadedImagePlaceholder","md","Grid","fluid","Card_Card","onSubmit","FormInputs_FormInputs","bsClass","placeholder","defaultValue","paddingTop","paddingBottom","controlId","rows","componentClass","UserCard_UserCard","Post","index_es","icon","faCoffee","toggleIsLikedByCurrentUser","isLikedByCurrentUser","retrieveLikes","postid","post","count","likes","Number","submitLikeAS","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","stop","likeid","displayLike","faThumbsUp","size","firstname","lastname","created","paddingLeft","paddingRight","whiteSpace","imagepath","PostList","redirectToLogin","Redirect","to","postImagePublicId","sendNewPostNotification","retrievePosts","multiple","resourceType","posts","creator_id","subject","recipient_type","components_Card_Card","components_Post_Post","Login","setRedirect","redirect","renderRedirect","submitSignInForm","inputEmail","inputPassword","user","changeCurrentUser","invalidSiginError","GroupImage","UserTab","handleChatClick","changeToUser","sendFriendRequest","_this$props2","senderid","receiverid","res","isNaN","sendFriendRequestNotification","isRequestSent","acceptFriendRequestAS","_this$props3","abrupt","t0","acceptFriendRequestNotification","refetchFriendRequests","deleteFriendRequest","_this$props4","deleteFriendRequestAS","_callee2","_this$props5","_context2","_this$props6","recipient_id","_this$props7","frid","_this$props8","cardType","imgSrc","friendsid","Community","fetchSearchUsers","searchKeyword","searchUserKeyword","users","mUsers","makeUserIdString","usersArray","displayContent","_this3","prop","lg","sm","components_UserTab_UserTab","dashboardRoutes","component","ChatBox","createChatRoomId","cu","tu","toUser","retrieveMessages","fromUserId","toUserId","chat","reverse","message","isOtherUserOnline","currentSocket","socket","io","chatRoomId","emit","sendMessage","ev","fromuserid","touserid","on","data","addMessage","toConsumableArray","scrollToBottomS","msgDiv","scrollTop","scrollHeight","clientHeight","disconnect","msgDialogs","msg","marginBottom","overflowY","minWidth","invisible","Verification","vStatus","search","location","params","URLSearchParams","get","currHost","origin","PendingRequests","Header","mobileSidebarToggle","sidebarExists","e","documentElement","classList","toggle","node","onclick","parentElement","removeChild","collapse","views","pathname","rightNav","Navbar","Collapse","Header_HeaderLinks","changeSearchUserKeyword","Brand","getBrand","Toggle","Footer","getFullYear","Sidebar","innerWidth","routeName","indexOf","updateDimensions","addEventListener","sidebarBackground","backgroundImage","imagine","sidebarHeaderLink","data-color","data-image","logo","upgrade","activeRoute","NavLink","activeClassName","indexRoutes","Dashboard","keyword","componentDidMount","handleNotificationClick","_notificationSystem","messageStr","notificationType","level","addNotification","data-notify","autoDismiss","refs","notificationSystem","NotificationSystem_default","ref","components_Sidebar_Sidebar","components_Header_Header","Switch","from","Route","render","emptyUserTemplate","components_Footer_Footer","App","simpleCrypto","SimpleCrypto","decryptUser","encryptedUser","ls","userStr","decrypt","parse","updateEncryptUser","encrypt","set","clear","joined","BrowserRouter","React","ReactDOM","src_App"],"mappings":"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Ae,WAClD,CAAC,IAAK,gBAAiB,UAAW,eAAgB,iBAClD,CAAC,IAAK,eAAgB,UAAW,SAAU,6BAC3C,CAAC,IAAK,eAAgB,UAAW,QAAS,eAyU1CC,WAjUiB,CACjB,cACA,YACA,eACA,gBACA,YACA,gBACA,kBACA,mBACA,eACA,YACA,eACA,mBACA,aACA,kBACA,aACA,mBACA,aACA,cACA,eACA,qBACA,iBACA,cACA,cACA,eACA,kBACA,eACA,iBACA,eACA,cACA,YACA,eACA,aACA,qBACA,aACA,cACA,kBACA,uBACA,YACA,qBACA,WACA,iBACA,mBACA,wBACA,cACA,oBACA,eACA,2BACA,cACA,mBACA,oBACA,0BACA,iBACA,mBACA,eACA,0BACA,iBACA,eACA,aACA,gBACA,gBACA,kBACA,cACA,aACA,eACA,eACA,iBACA,cACA,cACA,cACA,eACA,eACA,YACA,cACA,kBACA,aACA,gBACA,eACA,gBACA,gBACA,cACA,eACA,eACA,aACA,gBACA,aACA,eACA,eACA,gBACA,iBACA,sBACA,kBACA,cACA,cACA,cACA,gBACA,aACA,aACA,cACA,cACA,kBACA,cACA,aACA,mBACA,aACA,YACA,cACA,YACA,sBACA,YACA,cACA,aACA,YACA,oBACA,oBACA,oBACA,cACA,qBACA,iBACA,aACA,aACA,mBACA,kBACA,cACA,cACA,aACA,aACA,gBACA,cACA,aACA,YACA,mBACA,aACA,kBACA,uBACA,eACA,aACA,aACA,aACA,gBACA,aACA,aACA,cACA,aACA,eACA,aACA,aACA,aACA,cACA,cACA,eACA,eACA,eACA,cACA,eACA,cACA,gBACA,aACA,eACA,aACA,eACA,aACA,gBACA,gBACA,aACA,aACA,eACA,iBACA,iBACA,iBACA,iBACA,aACA,YACA,gBACA,aACA,eACA,kBACA,eACA,gBACA,gBACA,eACA,cACA,cACA,cACA,aACA,aACA,eACA,aACA,mBACA,gBACA,aACA,aACA,kBACA,gBACA,aACA,gBACA,aACA,aACA,kBACA,eACA,eACA,cAC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","file":"static/js/main.49edee9b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sidebar-3.34535b95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/face-3.ce7a6b79.jpg\";","module.exports = __webpack_public_path__ + \"static/media/group.fc325b52.jpg\";","module.exports = __webpack_public_path__ + \"static/media/reactlogo.9b864b36.png\";","const SERVER_URL = 'http://localhost:3001/'\r\n//const SERVER_URL = 'https://secure-ravine-95693.herokuapp.com/'\r\n//http://192.168.43.223:3000\r\nmodule.exports = {\r\n\tSERVER_URL\r\n}","module.exports = __webpack_public_path__ + \"static/media/sidebar-1.6be21e8a.jpg\";","//\n// //\n// // // For notifications\n// //\n//\nvar defaultWidth =\n  window.screen.width > 768 ? window.screen.width * 1 / 3 : window.screen.width;\n\nvar style = {\n  Wrapper: {},\n  Containers: {\n    DefaultStyle: {\n      position: \"fixed\",\n      width: defaultWidth,\n      padding: \"10px 10px 10px 20px\",\n      zIndex: 9998,\n      WebkitBoxSizing: \"\",\n      MozBoxSizing: \"\",\n      boxSizing: \"\",\n      height: \"auto\",\n      display: \"inline-block\",\n      border: \"0\",\n      fontSize: \"14px\",\n      WebkitFontSmoothing: \"antialiased\",\n      fontFamily: '\"Roboto\",\"Helvetica Neue\",Arial,sans-serif',\n      fontWeight: \"400\",\n      color: \"#FFFFFF\"\n    },\n\n    tl: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    tr: {\n      top: \"0px\",\n      bottom: \"auto\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    tc: {\n      top: \"0px\",\n      bottom: \"auto\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    },\n\n    bl: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"0px\",\n      right: \"auto\"\n    },\n\n    br: {\n      top: \"auto\",\n      bottom: \"0px\",\n      left: \"auto\",\n      right: \"0px\"\n    },\n\n    bc: {\n      top: \"auto\",\n      bottom: \"0px\",\n      margin: \"0 auto\",\n      left: \"50%\",\n      marginLeft: -(defaultWidth / 2)\n    }\n  },\n\n  NotificationItem: {\n    DefaultStyle: {\n      position: \"relative\",\n      width: \"100%\",\n      cursor: \"pointer\",\n      borderRadius: \"4px\",\n      fontSize: \"14px\",\n      margin: \"10px 0 0\",\n      padding: \"10px\",\n      display: \"block\",\n      WebkitBoxSizing: \"border-box\",\n      MozBoxSizing: \"border-box\",\n      boxSizing: \"border-box\",\n      opacity: 0,\n      transition: \"all 0.5s ease-in-out\",\n      WebkitTransform: \"translate3d(0, 0, 0)\",\n      transform: \"translate3d(0, 0, 0)\",\n      willChange: \"transform, opacity\",\n\n      isHidden: {\n        opacity: 0\n      },\n\n      isVisible: {\n        opacity: 1\n      }\n    },\n\n    success: {\n      borderTop: 0,\n      backgroundColor: \"#a1e82c\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    error: {\n      borderTop: 0,\n      backgroundColor: \"#fc727a\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    warning: {\n      borderTop: 0,\n      backgroundColor: \"#ffbc67\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    },\n\n    info: {\n      borderTop: 0,\n      backgroundColor: \"#63d8f1\",\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0\n    }\n  },\n\n  Title: {\n    DefaultStyle: {\n      fontSize: \"30px\",\n      margin: \"0\",\n      padding: 0,\n      fontWeight: \"bold\",\n      color: \"#FFFFFF\",\n      display: \"block\",\n      left: \"15px\",\n      position: \"absolute\",\n      top: \"50%\",\n      marginTop: \"-15px\"\n    }\n  },\n\n  MessageWrapper: {\n    DefaultStyle: {\n      marginLeft: \"55px\",\n      marginRight: \"30px\",\n      padding: \"0 12px 0 0\",\n      color: \"#FFFFFF\",\n      maxWidthwidth: \"89%\"\n    }\n  },\n\n  Dismiss: {\n    DefaultStyle: {\n      fontFamily: \"inherit\",\n      fontSize: \"21px\",\n      color: \"#000\",\n      float: \"right\",\n      position: \"absolute\",\n      right: \"10px\",\n      top: \"50%\",\n      marginTop: \"-13px\",\n      backgroundColor: \"#FFFFFF\",\n      display: \"block\",\n      borderRadius: \"50%\",\n      opacity: \".4\",\n      lineHeight: \"11px\",\n      width: \"25px\",\n      height: \"25px\",\n      outline: \"0 !important\",\n      textAlign: \"center\",\n      padding: \"6px 3px 3px 3px\",\n      fontWeight: \"300\",\n      marginLeft: \"65px\"\n    },\n\n    success: {\n      // color: '#f0f5ea',\n      // backgroundColor: '#a1e82c'\n    },\n\n    error: {\n      // color: '#f4e9e9',\n      // backgroundColor: '#fc727a'\n    },\n\n    warning: {\n      // color: '#f9f6f0',\n      // backgroundColor: '#ffbc67'\n    },\n\n    info: {\n      // color: '#e8f0f4',\n      // backgroundColor: '#63d8f1'\n    }\n  },\n\n  Action: {\n    DefaultStyle: {\n      background: \"#ffffff\",\n      borderRadius: \"2px\",\n      padding: \"6px 20px\",\n      fontWeight: \"bold\",\n      margin: \"10px 0 0 0\",\n      border: 0\n    },\n\n    success: {\n      backgroundColor: \"#a1e82c\",\n      color: \"#ffffff\"\n    },\n\n    error: {\n      backgroundColor: \"#fc727a\",\n      color: \"#ffffff\"\n    },\n\n    warning: {\n      backgroundColor: \"#ffbc67\",\n      color: \"#ffffff\"\n    },\n\n    info: {\n      backgroundColor: \"#63d8f1\",\n      color: \"#ffffff\"\n    }\n  },\n\n  ActionWrapper: {\n    DefaultStyle: {\n      margin: 0,\n      padding: 0\n    }\n  }\n};\n\n//\n// //\n// // // For tables\n// //\n//\nconst thArray = [\"ID\", \"Name\", \"Salary\", \"Country\", \"City\"];\nconst tdArray = [\n  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\n  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\n  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\n  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\", \"Overland Park\"],\n  [\"5\", \"Doris Greene\", \"$63,542\", \"Malawi\", \"Feldkirchen in Kärnten\"],\n  [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"]\n];\n\n//\n// //\n// // // For icons\n// //\n//\nconst iconsArray = [\n  \"pe-7s-album\",\n  \"pe-7s-arc\",\n  \"pe-7s-back-2\",\n  \"pe-7s-bandaid\",\n  \"pe-7s-car\",\n  \"pe-7s-diamond\",\n  \"pe-7s-door-lock\",\n  \"pe-7s-eyedropper\",\n  \"pe-7s-female\",\n  \"pe-7s-gym\",\n  \"pe-7s-hammer\",\n  \"pe-7s-headphones\",\n  \"pe-7s-helm\",\n  \"pe-7s-hourglass\",\n  \"pe-7s-leaf\",\n  \"pe-7s-magic-wand\",\n  \"pe-7s-male\",\n  \"pe-7s-map-2\",\n  \"pe-7s-next-2\",\n  \"pe-7s-paint-bucket\",\n  \"pe-7s-pendrive\",\n  \"pe-7s-photo\",\n  \"pe-7s-piggy\",\n  \"pe-7s-plugin\",\n  \"pe-7s-refresh-2\",\n  \"pe-7s-rocket\",\n  \"pe-7s-settings\",\n  \"pe-7s-shield\",\n  \"pe-7s-smile\",\n  \"pe-7s-usb\",\n  \"pe-7s-vector\",\n  \"pe-7s-wine\",\n  \"pe-7s-cloud-upload\",\n  \"pe-7s-cash\",\n  \"pe-7s-close\",\n  \"pe-7s-bluetooth\",\n  \"pe-7s-cloud-download\",\n  \"pe-7s-way\",\n  \"pe-7s-close-circle\",\n  \"pe-7s-id\",\n  \"pe-7s-angle-up\",\n  \"pe-7s-wristwatch\",\n  \"pe-7s-angle-up-circle\",\n  \"pe-7s-world\",\n  \"pe-7s-angle-right\",\n  \"pe-7s-volume\",\n  \"pe-7s-angle-right-circle\",\n  \"pe-7s-users\",\n  \"pe-7s-angle-left\",\n  \"pe-7s-user-female\",\n  \"pe-7s-angle-left-circle\",\n  \"pe-7s-up-arrow\",\n  \"pe-7s-angle-down\",\n  \"pe-7s-switch\",\n  \"pe-7s-angle-down-circle\",\n  \"pe-7s-scissors\",\n  \"pe-7s-wallet\",\n  \"pe-7s-safe\",\n  \"pe-7s-volume2\",\n  \"pe-7s-volume1\",\n  \"pe-7s-voicemail\",\n  \"pe-7s-video\",\n  \"pe-7s-user\",\n  \"pe-7s-upload\",\n  \"pe-7s-unlock\",\n  \"pe-7s-umbrella\",\n  \"pe-7s-trash\",\n  \"pe-7s-tools\",\n  \"pe-7s-timer\",\n  \"pe-7s-ticket\",\n  \"pe-7s-target\",\n  \"pe-7s-sun\",\n  \"pe-7s-study\",\n  \"pe-7s-stopwatch\",\n  \"pe-7s-star\",\n  \"pe-7s-speaker\",\n  \"pe-7s-signal\",\n  \"pe-7s-shuffle\",\n  \"pe-7s-shopbag\",\n  \"pe-7s-share\",\n  \"pe-7s-server\",\n  \"pe-7s-search\",\n  \"pe-7s-film\",\n  \"pe-7s-science\",\n  \"pe-7s-disk\",\n  \"pe-7s-ribbon\",\n  \"pe-7s-repeat\",\n  \"pe-7s-refresh\",\n  \"pe-7s-add-user\",\n  \"pe-7s-refresh-cloud\",\n  \"pe-7s-paperclip\",\n  \"pe-7s-radio\",\n  \"pe-7s-note2\",\n  \"pe-7s-print\",\n  \"pe-7s-network\",\n  \"pe-7s-prev\",\n  \"pe-7s-mute\",\n  \"pe-7s-power\",\n  \"pe-7s-medal\",\n  \"pe-7s-portfolio\",\n  \"pe-7s-like2\",\n  \"pe-7s-plus\",\n  \"pe-7s-left-arrow\",\n  \"pe-7s-play\",\n  \"pe-7s-key\",\n  \"pe-7s-plane\",\n  \"pe-7s-joy\",\n  \"pe-7s-photo-gallery\",\n  \"pe-7s-pin\",\n  \"pe-7s-phone\",\n  \"pe-7s-plug\",\n  \"pe-7s-pen\",\n  \"pe-7s-right-arrow\",\n  \"pe-7s-paper-plane\",\n  \"pe-7s-delete-user\",\n  \"pe-7s-paint\",\n  \"pe-7s-bottom-arrow\",\n  \"pe-7s-notebook\",\n  \"pe-7s-note\",\n  \"pe-7s-next\",\n  \"pe-7s-news-paper\",\n  \"pe-7s-musiclist\",\n  \"pe-7s-music\",\n  \"pe-7s-mouse\",\n  \"pe-7s-more\",\n  \"pe-7s-moon\",\n  \"pe-7s-monitor\",\n  \"pe-7s-micro\",\n  \"pe-7s-menu\",\n  \"pe-7s-map\",\n  \"pe-7s-map-marker\",\n  \"pe-7s-mail\",\n  \"pe-7s-mail-open\",\n  \"pe-7s-mail-open-file\",\n  \"pe-7s-magnet\",\n  \"pe-7s-loop\",\n  \"pe-7s-look\",\n  \"pe-7s-lock\",\n  \"pe-7s-lintern\",\n  \"pe-7s-link\",\n  \"pe-7s-like\",\n  \"pe-7s-light\",\n  \"pe-7s-less\",\n  \"pe-7s-keypad\",\n  \"pe-7s-junk\",\n  \"pe-7s-info\",\n  \"pe-7s-home\",\n  \"pe-7s-help2\",\n  \"pe-7s-help1\",\n  \"pe-7s-graph3\",\n  \"pe-7s-graph2\",\n  \"pe-7s-graph1\",\n  \"pe-7s-graph\",\n  \"pe-7s-global\",\n  \"pe-7s-gleam\",\n  \"pe-7s-glasses\",\n  \"pe-7s-gift\",\n  \"pe-7s-folder\",\n  \"pe-7s-flag\",\n  \"pe-7s-filter\",\n  \"pe-7s-file\",\n  \"pe-7s-expand1\",\n  \"pe-7s-exapnd2\",\n  \"pe-7s-edit\",\n  \"pe-7s-drop\",\n  \"pe-7s-drawer\",\n  \"pe-7s-download\",\n  \"pe-7s-display2\",\n  \"pe-7s-display1\",\n  \"pe-7s-diskette\",\n  \"pe-7s-date\",\n  \"pe-7s-cup\",\n  \"pe-7s-culture\",\n  \"pe-7s-crop\",\n  \"pe-7s-credit\",\n  \"pe-7s-copy-file\",\n  \"pe-7s-config\",\n  \"pe-7s-compass\",\n  \"pe-7s-comment\",\n  \"pe-7s-coffee\",\n  \"pe-7s-cloud\",\n  \"pe-7s-clock\",\n  \"pe-7s-check\",\n  \"pe-7s-chat\",\n  \"pe-7s-cart\",\n  \"pe-7s-camera\",\n  \"pe-7s-call\",\n  \"pe-7s-calculator\",\n  \"pe-7s-browser\",\n  \"pe-7s-box2\",\n  \"pe-7s-box1\",\n  \"pe-7s-bookmarks\",\n  \"pe-7s-bicycle\",\n  \"pe-7s-bell\",\n  \"pe-7s-battery\",\n  \"pe-7s-ball\",\n  \"pe-7s-back\",\n  \"pe-7s-attention\",\n  \"pe-7s-anchor\",\n  \"pe-7s-albums\",\n  \"pe-7s-alarm\",\n  \"pe-7s-airplay\"\n];\n\n//\n// //\n// // // // For dashboard's charts\n// //\n//\n// Data for Pie Chart\nvar dataPie = {\n  labels: [\"40%\", \"20%\", \"40%\"],\n  series: [40, 20, 40]\n};\nvar legendPie = {\n  names: [\"Open\", \"Bounce\", \"Unsubscribe\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Line Chart\nvar dataSales = {\n  labels: [\n    \"9:00AM\",\n    \"12:00AM\",\n    \"3:00PM\",\n    \"6:00PM\",\n    \"9:00PM\",\n    \"12:00PM\",\n    \"3:00AM\",\n    \"6:00AM\"\n  ],\n  series: [\n    [287, 385, 490, 492, 554, 586, 698, 695],\n    [67, 152, 143, 240, 287, 335, 435, 437],\n    [23, 113, 67, 108, 190, 239, 307, 308]\n  ]\n};\nvar optionsSales = {\n  low: 0,\n  high: 800,\n  showArea: false,\n  height: \"245px\",\n  axisX: {\n    showGrid: false\n  },\n  lineSmooth: true,\n  showLine: true,\n  showPoint: true,\n  fullWidth: true,\n  chartPadding: {\n    right: 50\n  }\n};\nvar responsiveSales = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendSales = {\n  names: [\"Open\", \"Click\", \"Click Second Time\"],\n  types: [\"info\", \"danger\", \"warning\"]\n};\n\n// Data for Bar Chart\nvar dataBar = {\n  labels: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"Mai\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ],\n  series: [\n    [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895],\n    [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]\n  ]\n};\nvar optionsBar = {\n  seriesBarDistance: 10,\n  axisX: {\n    showGrid: false\n  },\n  height: \"245px\"\n};\nvar responsiveBar = [\n  [\n    \"screen and (max-width: 640px)\",\n    {\n      seriesBarDistance: 5,\n      axisX: {\n        labelInterpolationFnc: function(value) {\n          return value[0];\n        }\n      }\n    }\n  ]\n];\nvar legendBar = {\n  names: [\"Tesla Model S\", \"BMW 5 Series\"],\n  types: [\"info\", \"danger\"]\n};\n\nmodule.exports = {\n  style, // For notifications (App container and Notifications view)\n  thArray,\n  tdArray, // For tables (TableList view)\n  iconsArray, // For icons (Icons view)\n  dataPie,\n  legendPie,\n  dataSales,\n  optionsSales,\n  responsiveSales,\n  legendSales,\n  dataBar,\n  optionsBar,\n  responsiveBar,\n  legendBar // For charts (Dashboard view)\n};\n","import React, { Component } from \"react\";\nimport { NavItem, Nav, NavDropdown, MenuItem, Form, DropdownButton } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom'\nimport {SERVER_URL} from \"constants/nodeserver\";\n\nclass HeaderLinks extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      notifications:[],\n      toCommunity:false,\n    }\n    this.fetchNotifications(); //to call this function when this component gets initiated\n  }\n\n // //To redirect the user to login page if no valid user is signed in\n //  redirectToCommunity = () => {\n //    console.log('redirectToCommunity called in HeaderLinks')\n //    if(this.state.toCommunity){\n //      return <Redirect to='/community' />\n //    }else{\n //      return null;\n //    }\n //  }\n\n  componentDidUpdate(prevProps) {\n  //Typical usage (don't forget to compare props):\n  if (this.props.currentUser !== prevProps.currentUser) {\n    console.log(\"current\", 'fetchNotifications ran in headerlinks')\n    this.fetchNotifications();\n  }\n  }\n\n  fetchNotifications = () => {\n    const currentUser = this.props.currentUser;\n    if(currentUser!== undefined && currentUser.id !== null && currentUser.id.toString().length > 0){\n     fetch(''+SERVER_URL+ 'getNotifications', {\n          method: 'post',\n          headers: {'Content-Type': 'application/json',\n            },\n          body: JSON.stringify({\n              userid: this.props.currentUser.id\n          })\n        }).then(response => response.json())\n          .then(ns => {\n            console.log('notifications retreived are', ns);\n            this.setState({notifications: ns})\n          })\n          .catch(err => console.log('ERROR in retriving notifications',err))\n    }else{\n      console.log('Invalid currentUser for fetchNotifications');\n    }\n  }\n\n\n  // handleSearch = (e) => {\n\n  //   const searchKeyword = document.getElementById('searchField1').value;\n  //     console.log('searchButton clicked', searchKeyword );\n  //     this.props.changeSearchUserKeyword(searchKeyword);\n  //     this.setState({toCommunity:true});\n  // }\n\n  processDate = (postCreated) => {\n      //console.log('processDate', postCreated)\n      const d = new Date(postCreated);\n      const strMonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      const month = strMonths[d.getMonth()];\n      const hour = d.getHours();\n      const minutes = d.getMinutes();\n      const day = d.getDate();\n      return day + \" \" + month + \" at \" + hour + \":\" + minutes;\n    }\n\n\n  updateNotificationReadStatus = () => {\n    const currentUser = this.props.currentUser;\n    if(currentUser!== undefined && currentUser.id !== null && currentUser.id.toString().length > 0){\n      var unreadCounter = 0\n      this.state.notifications.forEach((n, i) => {\n       if(n.is_read === 0)\n            unreadCounter++\n      })\n      if(unreadCounter > 0){\n       fetch(''+SERVER_URL+'updateNotificationReadStatus', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json',\n              },\n            body: JSON.stringify({\n                userid: this.props.currentUser.id\n            })\n          }).then(response => response.json())\n            .then(result => {\n              console.log('updateNotificationReadStatus result is', result);\n              //making the local notifications read in the state as the database must've been updated\n              this.state.notifications.forEach(n => n.is_read = 1);\n            })\n            .catch(err => console.log('ERROR in updateNotificationReadStatus',err))\n      }\n  }else{\n      console.log('Invalid currentUser for updateNotificationReadStatus');\n    }\n  }\n\n\n\n  render() {\n    const ns = this.state.notifications;\n    let displayNotifications, unreadCounter = 0;\n    if(ns.length === 0){\n      displayNotifications = <MenuItem>No items to display</MenuItem>\n    }else{\n      ns.forEach((n, i) => {\n       if(n.is_read === 0)\n            unreadCounter++\n      })\n       displayNotifications = ns.map((n,i) => {\n        return <MenuItem className='notificationMenuItem' key={i}>\n                    <div className='notificationMenuMsg'>{n.message_body}</div>\n                    <div className='notificationMenuTime'>{this.processDate(n.create_time)}</div>\n                    <hr style={{margin:'5px 0px 0px 0px',borderBottom: '2px solid #eee'}}/>\n               </MenuItem>\n      })\n    }\n    console.log('The HeaderLinks rendered, displayNotifications are:', displayNotifications);\n    const notification = (\n      <div>\n        <i className=\"fa fa-bell\" />\n        <b className=\"caret\" />\n        {(unreadCounter > 0)?(<span className=\"notification\">{unreadCounter}</span>):null}\n        <p className=\"hidden-lg hidden-md\">Notification</p>\n      </div>\n    );\n\n\n\n    return (\n      <div>\n      {\n      //  this.redirectToCommunity()\n      }\n        <Nav pullRight>\n           {/*<NavItem eventKey={3}>\n             <Form inline style={{margin:'auto 0px'}}>\n             <input type='search' id='searchField1' name='searchKeyword' className='searchTextField' placeholder='Search' size='15'/>\n               <button className='searchButton' onClick={this.handleSearch} type='submit'>\n                  <i className=\"fa fa-search\" />\n               </button>\n             </Form>\n           </NavItem>\n           */}\n           <NavDropdown\n            eventKey={2}\n            title={notification}\n            noCaret\n            id=\"basic-nav-dropdown\"\n            onFocus={()=> this.fetchNotifications()}\n            onMouseDown={()=> this.updateNotificationReadStatus()}\n          >\n            {displayNotifications}\n          </NavDropdown>\n          <NavDropdown\n            eventKey={2}\n            noCaret\n            title= { <div>\n                       {//<i className=\"fa fa-user\"/>\n                       }\n                       <img alt='user profile' style={{marginRight:'12px', marginLeft:'10px', width:'40px',verticalAlign:'top'}} src={'https://res.cloudinary.com/awesomedeveloper/image/upload/w_60,c_fill,ar_1:1,g_auto,r_max,bo_2px_solid_gray/' + this.props.currentUser.profileimageid} />\n                       <p className=\"hidden-lg hidden-md\" style={{display:'inline-block'}}>Account</p>\n                     </div>\n                   }\n            id=\"basic-nav-dropdown-right\"\n          >\n            <MenuItem eventKey={2.1}>Account</MenuItem>\n            <MenuItem eventKey={2.2}>Profile</MenuItem>\n            <MenuItem eventKey={2.3}>Settings</MenuItem>\n            <MenuItem divider />\n            <MenuItem eventKey={2.5} onClick={() => {this.props.logoutUser();}}>Logout</MenuItem>\n          </NavDropdown>\n        </Nav>\n      </div>\n    );\n  }\n}\n\nexport default HeaderLinks;\n","import React, { Component } from \"react\";\n\nexport class Card extends Component {\n  render() {\n    return (\n      <div className={\"card\" + (this.props.plain ? \" card-plain\" : \"\")}>\n        <div className={\"header\" + (this.props.hCenter ? \" text-center\" : \"\")}>\n          <h4 className=\"title\">{this.props.title}</h4>\n          <p className=\"category\">{this.props.category}</p>\n        </div>\n        <div\n          className={\n            \"content\" +\n            (this.props.ctAllIcons ? \" all-icons\" : \"\") +\n            (this.props.ctTableFullWidth ? \" table-full-width\" : \"\") +\n            (this.props.ctTableResponsive ? \" table-responsive\" : \"\") +\n            (this.props.ctTableUpgrade ? \" table-upgrade\" : \"\")\n          }\n        >\n          {this.props.content}\n\n          <div className=\"footer\">\n            {this.props.legend}\n            {this.props.stats != null ? <hr /> : \"\"}\n            <div className=\"stats\">\n              <i className={this.props.statsIcon} /> {this.props.stats}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\nexport class StatsCard extends Component {\n  render() {\n    return (\n      <div className=\"card card-stats\">\n        <div className=\"content\">\n          <Row>\n            <Col xs={5}>\n              <div className=\"icon-big text-center icon-warning\">\n                {this.props.bigIcon}\n              </div>\n            </Col>\n            <Col xs={7}>\n              <div className=\"numbers\">\n                <p>{this.props.statsText}</p>\n                {this.props.statsValue}\n              </div>\n            </Col>\n          </Row>\n          <div className=\"footer\">\n            <hr />\n            <div className=\"stats\">\n              {this.props.statsIcon} {this.props.statsIconText}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StatsCard;\n","import React, { Component } from \"react\";\n\nclass CustomCheckbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      is_checked: props.isChecked ? true : false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    this.setState({ is_checked: !this.state.is_checked });\n  }\n  render() {\n    const { isChecked, number, label, inline, ...rest } = this.props;\n    const classes =\n      inline !== undefined ? \"checkbox checkbox-inline\" : \"checkbox\";\n    return (\n      <div className={classes}>\n        <input\n          id={number}\n          type=\"checkbox\"\n          onChange={this.handleClick}\n          checked={this.state.is_checked}\n          {...rest}\n        />\n        <label htmlFor={number}>{label}</label>\n      </div>\n    );\n  }\n}\n\nexport default CustomCheckbox;\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nclass CustomButton extends Component {\n  render() {\n    const { fill, simple, pullRight, round, block, ...rest } = this.props;\n\n    const btnClasses = cx({\n      \"btn-fill\": fill,\n      \"btn-simple\": simple,\n      \"pull-right\": pullRight,\n      \"btn-block\": block,\n      \"btn-round\": round\n    });\n\n    return <Button className={btnClasses} {...rest} />;\n  }\n}\n\nCustomButton.propTypes = {\n  fill: PropTypes.bool,\n  simple: PropTypes.bool,\n  pullRight: PropTypes.bool,\n  block: PropTypes.bool,\n  round: PropTypes.bool\n};\n\nexport default CustomButton;\n","import React, { Component } from \"react\";\nimport { Tooltip, OverlayTrigger } from \"react-bootstrap\";\nimport Checkbox from \"components/CustomCheckbox/CustomCheckbox.jsx\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\n\nexport class Tasks extends Component {\n  handleCheckbox = event => {\n    const target = event.target;\n    console.log(event.target);\n    this.setState({\n      [target.name]: target.checked\n    });\n  };\n  render() {\n    const edit = <Tooltip id=\"edit_tooltip\">Edit Task</Tooltip>;\n    const remove = <Tooltip id=\"remove_tooltip\">Remove</Tooltip>;\n    const tasks_title = [\n      'Sign contract for \"What are conference organizers afraid of?\"',\n      \"Lines From Great Russian Literature? Or E-mails From My Boss?\",\n      \"Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroi\",\n      \"Create 4 Invisible User Experiences you Never Knew About\",\n      'Read \"Following makes Medium better\"',\n      \"Unfollow 5 enemies from twitter\"\n    ];\n    var tasks = [];\n    var number;\n    for (var i = 0; i < tasks_title.length; i++) {\n      number = \"checkbox\" + i;\n      tasks.push(\n        <tr key={i}>\n          <td>\n            <Checkbox\n              number={number}\n              isChecked={i === 1 || i === 2 ? true : false}\n            />\n          </td>\n          <td>{tasks_title[i]}</td>\n          <td className=\"td-actions text-right\">\n            <OverlayTrigger placement=\"top\" overlay={edit}>\n              <Button bsStyle=\"info\" simple type=\"button\" bsSize=\"xs\">\n                <i className=\"fa fa-edit\" />\n              </Button>\n            </OverlayTrigger>\n\n            <OverlayTrigger placement=\"top\" overlay={remove}>\n              <Button bsStyle=\"danger\" simple type=\"button\" bsSize=\"xs\">\n                <i className=\"fa fa-times\" />\n              </Button>\n            </OverlayTrigger>\n          </td>\n        </tr>\n      );\n    }\n    return <tbody>{tasks}</tbody>;\n  }\n}\n\nexport default Tasks;\n","import React, { Component } from \"react\";\nimport ChartistGraph from \"react-chartist\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom'\nimport { Card } from \"components/Card/Card.jsx\";\nimport { StatsCard } from \"components/StatsCard/StatsCard.jsx\";\nimport { Tasks } from \"components/Tasks/Tasks.jsx\";\nimport {\n  dataPie,\n  legendPie,\n  dataSales,\n  optionsSales,\n  responsiveSales,\n  legendSales,\n  dataBar,\n  optionsBar,\n  responsiveBar,\n  legendBar\n} from \"variables/Variables.jsx\";\n\nclass Analytics extends Component {\n  createLegend(json) {\n    var legend = [];\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(<i className={type} key={i} />);\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n    return legend;\n  }\n\n //To redirect the user to login page if no valid user is signed in\n  redirectToLogin = () => {\n    console.log('redirectToLogin called in TableList')\n    const currentUser = this.props.currentUser;\n    if(currentUser.id == null || currentUser.id.toString().length === 0){\n      console.log('Redirecting to login page')\n      return <Redirect to='/login' />\n    }else{\n      console.log('redirectToLogin to login did not redirect')\n      return null;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n      {this.redirectToLogin()}\n        <Grid fluid>\n          <Row>\n            <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"pe-7s-server text-warning\" />}\n                statsText=\"Capacity\"\n                statsValue=\"105GB\"\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText=\"Updated now\"\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"pe-7s-wallet text-success\" />}\n                statsText=\"Revenue\"\n                statsValue=\"$1,345\"\n                statsIcon={<i className=\"fa fa-calendar-o\" />}\n                statsIconText=\"Last day\"\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\n                statsText=\"Errors\"\n                statsValue=\"23\"\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText=\"In the last hour\"\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"fa fa-twitter text-info\" />}\n                statsText=\"Followers\"\n                statsValue=\"+45\"\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText=\"Updated now\"\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col md={8}>\n              <Card\n                statsIcon=\"fa fa-history\"\n                id=\"chartHours\"\n                title=\"Users Behavior\"\n                category=\"24 Hours performance\"\n                stats=\"Updated 3 minutes ago\"\n                content={\n                  <div className=\"ct-chart\">\n                    <ChartistGraph\n                      data={dataSales}\n                      type=\"Line\"\n                      options={optionsSales}\n                      responsiveOptions={responsiveSales}\n                    />\n                  </div>\n                }\n                legend={\n                  <div className=\"legend\">{this.createLegend(legendSales)}</div>\n                }\n              />\n            </Col>\n            <Col md={4}>\n              <Card\n                statsIcon=\"fa fa-clock-o\"\n                title=\"Email Statistics\"\n                category=\"Last Campaign Performance\"\n                stats=\"Campaign sent 2 days ago\"\n                content={\n                  <div\n                    id=\"chartPreferences\"\n                    className=\"ct-chart ct-perfect-fourth\"\n                  >\n                    <ChartistGraph data={dataPie} type=\"Pie\" />\n                  </div>\n                }\n                legend={\n                  <div className=\"legend\">{this.createLegend(legendPie)}</div>\n                }\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col md={6}>\n              <Card\n                id=\"chartActivity\"\n                title=\"2014 Sales\"\n                category=\"All products including Taxes\"\n                stats=\"Data information certified\"\n                statsIcon=\"fa fa-check\"\n                content={\n                  <div className=\"ct-chart\">\n                    <ChartistGraph\n                      data={dataBar}\n                      type=\"Bar\"\n                      options={optionsBar}\n                      responsiveOptions={responsiveBar}\n                    />\n                  </div>\n                }\n                legend={\n                  <div className=\"legend\">{this.createLegend(legendBar)}</div>\n                }\n              />\n            </Col>\n\n            <Col md={6}>\n              <Card\n                title=\"Tasks\"\n                category=\"Backend development\"\n                stats=\"Updated 3 minutes ago\"\n                statsIcon=\"fa fa-history\"\n                content={\n                  <div className=\"table-full-width\">\n                    <table className=\"table\">\n                      <Tasks />\n                    </table>\n                  </div>\n                }\n              />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Analytics;\n","import React, { Component } from \"react\";\nimport { FormGroup, ControlLabel, FormControl, Row } from \"react-bootstrap\";\n\nfunction FieldGroup({ label, ...props }) {\n  return (\n    <FormGroup>\n      <ControlLabel>{label}</ControlLabel>\n      <FormControl {...props} />\n    </FormGroup>\n  );\n}\n\nexport class FormInputs extends Component {\n  render() {\n    var row = [];\n    for (var i = 0; i < this.props.ncols.length; i++) {\n      row.push(\n        <div key={i} className={this.props.ncols[i]}>\n          <FieldGroup {...this.props.proprieties[i]} />\n        </div>\n      );\n    }\n    return <Row>{row}</Row>;\n  }\n}\n\nexport default FormInputs;\n","import React, { Component } from \"react\";\n\nexport class UserCard extends Component {\n  render() {\n    return (\n      <div className=\"card card-user\">\n        <div className=\"image\">\n          <img src={this.props.bgImage} alt=\"...\" />\n        </div>\n        <div className=\"content\">\n          <div className=\"author\">\n            <a href=\"#pablo\">\n              <img\n                className=\"avatar border-gray\"\n                src={this.props.avatar}\n                alt=\"...\"\n              />\n              <h4 className=\"title\">\n                {this.props.name}\n                <br />\n                <small>{this.props.userName}</small>\n              </h4>\n            </a>\n          </div>\n          <p className=\"description text-center\">{this.props.description}</p>\n        </div>\n        <hr />\n        <div className=\"text-center\">{this.props.socials}</div>\n      </div>\n    );\n  }\n}\n\nexport default UserCard;\n","import React, { Component } from \"react\";\nimport {\n  Grid,\n  Row,\n  Col,\n  FormGroup,\n  ControlLabel,\n  FormControl\n} from \"react-bootstrap\";\nimport { Card } from \"components/Card/Card.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport { UserCard } from \"components/UserCard/UserCard.jsx\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport {SERVER_URL} from \"constants/nodeserver\";\nimport avatar from \"assets/img/faces/face-3.jpg\";\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      imagePublicId: '',\n    }\n  }\n\n  handleSubmit = (event) => {\n      event.preventDefault();\n      console.log('Submit Button Clicked', event.target.elements);\n      let {fname, lname, email, password1, password2, tagline} = event.target.elements;\n      fname = fname.value;\n      lname = lname.value;\n      email = email.value;\n      password1 = password1.value;\n      password2 = password2.value;\n      tagline = tagline.value;\n      const imagePublicId = this.state.imagePublicId;\n\n\n      if(!fname || !lname || !email || !password1 || !password2 || !tagline){\n        console.log('ERROR in Signup Form','All fields must be filled');\n        this.props.handleClick('All fields must be filled', 3);\n        return\n      }\n\n      if(!imagePublicId || imagePublicId.length === 0){\n        console.log('ERROR in Signup Form','No Profile Image selected');\n        this.props.handleClick('No Profile Image selected', 3);\n        return\n      }\n\n      if(password1 !== password2){\n        console.log('ERROR in Signup Form','ERROR','Passwords do not match')\n        this.props.handleClick('Passwords do not match', 3);\n        return;\n      }\n\n      fetch(''+SERVER_URL+'register', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json',\n          },\n        body: JSON.stringify({\n          firstName:fname,\n              lastName:lname,\n              email:email,\n              password: password1,\n              imagePublicId,\n              tagline\n        })\n      }).then(response => response.json())\n        .then(id => {\n          if(id === -1)\n              this.props.handleClick('Email Already Exists! Registration Failed :(', 3);\n          else{\n              console.log('User Registered Successfully ', id);\n              this.props.handleClick('Registration Successful! Verification Email Sent to ' + email, 1);\n          }\n        })\n        .catch(err => console.log('ERROR in SUBMITTING the Signup Form',err))\n\n       document.getElementById('signupform').reset();\n       this.setState({imagePublicId: ''});\n\n    } //closing the handlesubmit\n\n  uploadWidget = () => {\n      window.cloudinary.openUploadWidget({ \n        cloud_name: 'awesomedeveloper',\n        upload_preset: 'onkarpreset',\n        cropping: true,\n        croppingAspectRatio: 1,\n        singleUploadAutoClose: false,\n        thumbnails:false,\n         clientAllowedFormats:[\"png\",\"gif\", \"jpeg\"],\n          maxFileSize: 5500000\n      }, \n      (error, result) => { \n         if(error){\n            console.log(error);\n         }\n         if (result && result.event === \"success\") {\n            const path = result.info.path;\n            console.log('path for the uploaded image is ', path);\n            this.setState({imagePublicId: path});\n         }\n      });\n            \n  }\n\n  //To add the Cloudinary widget into the Signup Page\n  componentDidMount(){\n        const script = document.createElement(\"script\");\n        script.src = \"https://widget.cloudinary.com/v2.0/global/all.js\";\n        script.async = true;\n\n        document.body.appendChild(script);\n  }\n  \n\n  render() {\n     var uploadedImagePlaceholder;\n    if(this.state.imagePublicId.length != 0){\n      uploadedImagePlaceholder = <Row><Col md={3}>\n                                  <img alt='Profile Image' style={{width:'200px',height:'200px',border:'2px solid black'}} src={'https://res.cloudinary.com/awesomedeveloper/image/upload/c_scale,w_400/' + this.state.imagePublicId} />\n                                 </Col></Row>\n    }else{\n      uploadedImagePlaceholder = null;\n    }\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col md={8}>\n              <Card\n                title=\"User Signup\"\n                content={\n                  <form onSubmit={this.handleSubmit} id='signupform'>\n\n                    <FormInputs\n                      ncols={[\"col-md-6\", \"col-md-6\"]}\n                      proprieties={[\n                        {\n                          label: \"First name\",\n                          type: \"text\",\n                          bsClass: \"form-control\",\n                          placeholder: \"First name\",\n                          defaultValue: \"\",\n                          name:'fname'\n                        },\n                        {\n                          label: \"Last name\",\n                          type: \"text\",\n                          bsClass: \"form-control\",\n                          placeholder: \"Last name\",\n                          defaultValue: \"\",\n                          name:'lname'\n                        }\n                      ]}\n                    />\n\n                    <FormInputs\n                      ncols={[\"col-md-4\", \"col-md-8\"]}\n                      proprieties={[\n                        {\n                          label: \"Email address\",\n                          type: \"email\",\n                          bsClass: \"form-control\",\n                          placeholder: \"Email\",\n                          name:'email'\n                        },\n                        {\n                          label: \"Program\",\n                          type: \"text\",\n                          bsClass: \"form-control\",\n                          placeholder: \"Program eg: Software Engineering\",\n                          defaultValue: \"\",\n                          name:'program'\n                        }      \n                      ]}\n                    />\n                    <FormInputs\n                      ncols={[\"col-md-12\"]}\n                      proprieties={[\n                        {\n                          label: \"Tag Line\",\n                          type: \"text\",\n                          bsClass: \"form-control\",\n                          placeholder: \"Some phrases to describe you\",\n                          defaultValue:\"\",\n                          name:'tagline'\n                        }\n                      ]}\n                    />\n                    <FormInputs\n                      ncols={[\"col-md-6\", \"col-md-6\"]}\n                      proprieties={[\n                        {\n                          label: \"Password\",\n                          type: \"password\",\n                          bsClass: \"form-control\",\n                          placeholder: \"Password\",\n                          defaultValue: \"\",\n                          name:'password1'\n                        },\n                        {\n                          label: \"Confirm Password\",\n                          type: \"password\",\n                          bsClass: \"form-control\",\n                          placeholder: \"Confirm Password\",\n                          defaultValue: \"\",\n                          name:'password2'\n                        }\n                      ]}\n                    />\n                    \n                    {uploadedImagePlaceholder}\n\n                     <Row style={{paddingTop: '10px', paddingBottom:'10px'}}>\n                      <Col md={3}>\n                        <Button bsStyle=\"info\" simple fill onClick={this.uploadWidget} id=\"widget2\" type=\"button\">\n                          Upload Profile Picture\n                        </Button>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md={12}>\n                        <FormGroup controlId=\"formControlsTextarea\">\n                          <ControlLabel>About Me</ControlLabel>\n                          <FormControl\n                            rows=\"5\"\n                            componentClass=\"textarea\"\n                            bsClass=\"form-control\"\n                            placeholder=\"Here can be your description\"\n                            defaultValue=\"I am a student, hoping to learn a lot at Sheridan... LOL\"\n                          />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md={12} className=\"text-center\">\n                        <Button bsStyle=\"primary\" simple fill type=\"submit\">\n                          SignUp\n                        </Button>\n                      </Col>\n                    </Row>\n                    <div className=\"clearfix\" />\n                  </form>\n                }\n              />\n            </Col>\n            <Col md={4}>\n              <UserCard\n                bgImage=\"https://ununsplash.imgix.net/photo-1431578500526-4d9613015464?fit=crop&fm=jpg&h=300&q=75&w=400\"\n                avatar={avatar}\n                name=\"Your Name\"\n                userName=\"username\"\n                description={\n                  <span>\n                    \"Lamborghini Mercy\n                    <br />\n                    I'm king of this world!!\n                    <br />\n                    I'm in that two seat Lambo\"\n                  </span>\n                }\n                socials={\n                  <div>\n                    <Button simple>\n                      <i className=\"fa fa-facebook-square\" />\n                    </Button>\n                    <Button simple>\n                      <i className=\"fa fa-twitter\" />\n                    </Button>\n                    <Button simple>\n                      <i className=\"fa fa-google-plus-square\" />\n                    </Button>\n                  </div>\n                }\n              />\n            </Col>\n          </Row>\n        </Grid>>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, {Component} from 'react';\r\nimport {SERVER_URL} from \"../../constants/nodeserver\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoffee, faThumbsUp } from '@fortawesome/free-solid-svg-icons'\r\n \r\nconst element = <FontAwesomeIcon icon={faCoffee} />\r\n\r\nclass Post extends Component{\r\n\tconstructor(props){\r\n\t    super(props);\r\n\t    this.state = {\r\n\t      likes:0,\r\n\t      isLikedByCurrentUser: (this.props.post.likeid === null)?false:true,\r\n\t    }\r\n  \t}\r\n\r\n  \ttoggleIsLikedByCurrentUser = () => {\r\n  \t\tif(this.state.isLikedByCurrentUser === true)\r\n  \t\t\tthis.setState({isLikedByCurrentUser: false})\r\n  \t\telse\r\n  \t\t\tthis.setState({isLikedByCurrentUser: true})\r\n  \t}\r\n\r\n  \tprocessDate = (postCreated) => {\r\n  \t\t//console.log('processDate', postCreated)\r\n  \t\tconst d = new Date(postCreated);\r\n  \t\tconst strMonths = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n  \t\tconst month = strMonths[d.getMonth()];\r\n  \t\tconst hour = d.getHours();\r\n  \t\tconst minutes = d.getMinutes();\r\n  \t\tconst day = d.getDate();\r\n  \t\treturn day + \" \" + month + \" at \" + hour + \":\" + minutes;\r\n  \t}\r\n\r\n  \tcomponentDidMount(){\r\n  \t\tthis.retrieveLikes();\r\n  \t}\r\n\r\n  \tretrieveLikes = () => {\r\n  \t\tconst postid = this.props.post.postid;\r\n  \t\tfetch(''+SERVER_URL+'getLikeCount', {\r\n        method: 'post',\r\n        headers: {'Content-Type': 'application/json',\r\n          },\r\n        body: JSON.stringify({\r\n            postid\r\n        })\r\n      }).then(response => response.json())\r\n        .then(count => this.setState({likes:Number(count)}))\r\n        .catch(err => console.log('ERROR in retriving likes',err))\r\n  \t}\r\n\r\n\r\n  \t// submitLike = () => {\r\n  \t// \tconst userid = this.props.currentUser.id;\r\n  \t// \tconst postid = this.props.post.postid;\r\n  \t// \tconsole.log('userid in post', userid, 'postid is ', postid)\r\n  \t// \tfetch(''+SERVER_URL+'likePost', {\r\n   //      method: 'post',\r\n   //      headers: {'Content-Type': 'application/json',\r\n   //        },\r\n   //      body: JSON.stringify({\r\n   //          userid,\r\n   //          postid,\r\n   //      })\r\n   //    }).then(response => response.json())\r\n   //      .then(result => {\r\n   //      \tconsole.log('Like Response is ',result)\r\n   //  \t})\r\n   //      .catch(err => console.log('ERROR in SUBMITTING the like',err))\r\n\r\n   //      this.retrieveLikes(); //to update likes once the user has liked the post\r\n  \t// }\r\n\r\n  \tsubmitLikeAS = async () => {\r\n  \t\tthis.toggleIsLikedByCurrentUser();  //to change the color of the like thumb\r\n  \t\tconst userid = this.props.currentUser.id;\r\n  \t\tconst postid = this.props.post.postid;\r\n  \t\tconst response = await fetch(''+SERVER_URL+'likePost', {\r\n\t\t\t\t\t\t        method: 'post',\r\n\t\t\t\t\t\t        headers: {'Content-Type': 'application/json',\r\n\t\t\t\t\t\t          },\r\n\t\t\t\t\t\t        body: JSON.stringify({\r\n\t\t\t\t\t\t            userid,\r\n\t\t\t\t\t\t            postid,\r\n\t\t\t\t\t\t        })\r\n\t\t\t\t\t\t      })\r\n  \t\tconst result = await response.json();\r\n  \t\tconsole.log('submitLikeAS returned likeid', result);\r\n        this.retrieveLikes(); //to update likes once the user has liked the post\r\n  \t}\r\n\r\n //  \tretrieveMessagesS = async () =>{\r\n\t// \tconst response = await fetch(''+SERVER_URL+'getAllMessages', {\r\n\t// \t\t\t\t\t    method: 'post',\r\n\t// \t\t\t\t\t    headers: {'Content-Type': 'application/json'},\r\n\t// \t\t\t\t\t    body: JSON.stringify({\r\n\t// \t\t\t\t\t    \tfromUserId: this.props.currentUser.id,\r\n\t// \t\t\t\t\t    \ttoUserId: this.props.toUser.id,\r\n\t// \t\t\t\t\t    })\r\n\t// \t\t\t\t    })\r\n\t// \tconst chat = await response.json();\r\n\t//     this.setState({chat:chat});\r\n\t// }\r\n\r\n\r\n\r\n\trender(){\r\n\t\tconst post = this.props.post;\r\n\t\tconst likes = this.state.likes;\r\n\t\tvar displayLike = 'Like';\r\n\t\tif(this.state.isLikedByCurrentUser === false){\r\n\t\t\tdisplayLike = <div>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faThumbsUp} size='2x'/>\r\n\t\t\t\t\t\t\t<b style={{verticalAlign:'super', marginLeft:'5px'}} >Like</b>\r\n\t\t\t\t\t\t </div>\r\n\t\t}else{\r\n\t\t\tdisplayLike = <div>\r\n\t\t\t\t            <FontAwesomeIcon icon={faThumbsUp} size='2x' color=\"blue\" />\r\n\t\t\t\t\t\t    <b style={{verticalAlign:'super', marginLeft:'5px'}} >Liked</b>\r\n\t\t\t\t\t\t  </div>\r\n\t\t}\r\n\t\treturn(\r\n\t\t\t<div className='card postContainer'>\r\n\t\t\t\t<div style={{padding: '12px'}}>\r\n\t\t\t\t\t{/*Add the user profile image and name here*/}\r\n\t\t\t\t<img alt='user profile' style={{marginRight:'10px',width:'50px',verticalAlign:'top'}} src={'https://res.cloudinary.com/awesomedeveloper/image/upload/w_60,c_fill,ar_1:1,g_auto,r_max,bo_2px_solid_gray/' + post.profileimageid} />\r\n\t\t\t\t\t<div className='postUser'>\r\n\t\t\t\t\t\t<div style={{fontSize:'1.6rem',fontWeight:'900'}}>{post.firstname + \" \" + post.lastname}</div>\r\n\t\t\t\t\t\t<div style={{fontSize:'1.2rem'}}>{this.processDate(post.created)}</div>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{paddingLeft:'12px',paddingRight:'12px',paddingBottom:'6px',fontSize:'1.5rem',whiteSpace: 'pre-line'}}>\r\n\t\t\t\t\t{/*Add the post description here, whiteSpace:pre-line renders \\n in description as new line*/}\r\n\t\t\t\t\t\t{post.description}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div >\r\n\t\t\t\t\t{/*Add the post image here*/}\r\n\t\t\t\t\t<img alt='post' style={{width:'100%',height:'auto',borderTop:'1px solid gray', borderBottom:'1px solid gray'}} src={'https://res.cloudinary.com/awesomedeveloper/image/upload/c_scale,w_800/' + post.imagepath} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{padding:'12px'}}>\r\n\t\t\t\t\t{/*Panel to like the post above*/}\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t{(likes === 0)?'':((likes ===1)? likes + \" like\" : likes + \" likes\")}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<hr className='hrline2'/>\r\n\t\t\t\t\t<div className='likeButtonContainer' onClick={this.submitLikeAS}>\r\n\t\t\t\t\t\t{displayLike}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> \r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Post;\r\n","import React, { Component } from \"react\";\nimport { Grid, Row, Col,FormGroup,FormControl } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom'\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport Post from \"components/Post/Post.jsx\";\nimport {SERVER_URL} from \"constants/nodeserver\";\n//import {NOTIFICATION_BODY_ARRAY, NOTIFICATION_SUBJECT_ARRAY} from 'constants/Notifications';\n//import Sidebar from 'components/Sidebar/Sidebar'\nimport img1 from 'assets/img/sidebar-1.jpg';\nclass PostList extends Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      postImagePublicId: '',\n      posts:[],\n    }\n  }\n\n//To redirect the user to login page if no valid user is signed in\n  redirectToLogin = () => {\n   // console.log('redirectToLogin called in PostList')\n    const currentUser = this.props.currentUser;\n    if(currentUser.id == null || currentUser.id.toString().length === 0){\n      console.log('Redirecting to login page from postList')\n      return <Redirect to='/login' />\n    }else{\n     // console.log('redirectToLogin to login did not redirect')\n      return null;\n    }\n  }\n\n  handleSubmit = (event) => {\n      event.preventDefault();\n      console.log('Submit Button Clicked', event.target.elements);\n      let {description} = event.target.elements;\n      const userid = this.props.currentUser.id;\n      description = description.value;\n      const postImagePublicId = this.state.postImagePublicId;\n\n      if(!userid || userid.length=== 0 || !description){\n        console.log('ERROR in addPost Form','All fields must be filled or invalid user');\n        return\n      }\n\n      if(!postImagePublicId || postImagePublicId.length === 0){\n        console.log('ERROR in addPost Form','No post Image selected');\n        return\n      }\n\n      fetch(''+SERVER_URL+'addAPost', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json',\n          },\n        body: JSON.stringify({\n            userid,\n            description,\n            imagepath: postImagePublicId,\n        })\n      }).then(response => response.json())\n        .then(postid => console.log('PostId for the submitted post is ',postid))\n        .catch(err => console.log('ERROR in SUBMITTING the addPost Form',err))\n\n       document.getElementById('addPostForm').reset();\n       this.setState({postImagePublicId:''}); //the image thumnail needs to be removed on submission\n       this.sendNewPostNotification();\n       this.retrievePosts();\n\n\n    } //closing the handlesubmit\n\n  uploadWidget = () => {\n        window.cloudinary.openUploadWidget({ \n          cloud_name: 'awesomedeveloper',\n        upload_preset: 'onkarpreset',\n          cropping : 'server',\n          croppingAspectRatio: 1,\n          singleUploadAutoClose: false,\n          thumbnails: false,\n          multiple: false,\n          resourceType: 'image',\n          clientAllowedFormats:[\"png\",\"gif\", \"jpeg\"],\n          maxFileSize: 5500000\n        }, \n        (error, result) => { \n           if(error){\n              console.log(error);\n           }\n           if (result && result.event === \"success\") {\n              const path = result.info.path;\n              console.log('path for the uploaded image is ', path);\n              this.setState({postImagePublicId: path});\n           }\n        });\n              \n    }\n\n    //To add the Cloudinary widget into the Signup Page\n    componentDidMount(){\n      this.retrievePosts();\n\n\n      /* Widget Script Additon*/\n          const script = document.createElement(\"script\");\n          script.src = \"https://widget.cloudinary.com/v2.0/global/all.js\";\n          script.async = true;\n          document.body.appendChild(script);\n    }\n\n    retrievePosts = () => {\n      fetch(''+SERVER_URL+'getAllPostsV2', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json',\n          },\n        body: JSON.stringify({\n            userid: this.props.currentUser.id\n        })\n      }).then(response => response.json())\n        .then(posts => this.setState({posts:posts}) )\n        .catch(err => console.log('ERROR in retriving posts',err))\n    }\n\n  sendNewPostNotification = () => {\n      const currentUser = this.props.currentUser;\n      fetch(''+SERVER_URL+'sendGlobalNotification', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json',\n          },\n        body: JSON.stringify({\n            creator_id: currentUser.id,\n            message_body: (currentUser.firstname +\" \"+ currentUser.lastname + ' added a new post'),\n            subject:'New Post',\n            recipient_type:'GLOBAL'\n        })\n      }).then(response => response.json())\n        .then(result => console.log('The result for sendNewPostNotification is ', result))\n        .catch(err => console.log('ERROR in retriving posts',err))\n  }  \n  \n\n  render() {\n    const currentUser = this.props.currentUser;\n    const posts = this.state.posts;\n     var uploadedImagePlaceholder;\n    if(this.state.postImagePublicId.length != 0){\n      uploadedImagePlaceholder = <Row><Col md={3}>\n                                  <img alt='post' style={{width:'200px',height:'200px',borderTop:'1px solid gray', borderBottom:'1px solid gray'}} src={'https://res.cloudinary.com/awesomedeveloper/image/upload/c_scale,w_400/' + this.state.postImagePublicId} />\n                                 </Col></Row>\n    }else{\n      uploadedImagePlaceholder = null;\n    }\n    return (\n\n      <div className=\"content\">\n      {this.redirectToLogin()}\n        <Grid fluid>\n          <Row>\n            <Col md={6}>\n              <Card\n                title=\"Add a post\"\n                category=\"Share something with the community\"\n                content={\n\n                  <form onSubmit={this.handleSubmit} id='addPostForm'>\n                    <Row>\n                        <Col md={12}>\n                          <FormGroup controlId=\"formControlsTextarea\">\n                            <FormControl\n                              rows=\"3\"\n                              componentClass=\"textarea\"\n                              name=\"description\"\n                              bsClass=\"form-control\"\n                              placeholder={\"What's on your mind, \" + currentUser.firstname}\n                              defaultValue=\"\"\n                            />\n                          </FormGroup>\n                        </Col>\n                    </Row>\n                    {uploadedImagePlaceholder}\n                    <Row>\n                        <Col md={3}>\n                          <Button className='btn btn-info' onClick={this.uploadWidget} id=\"widget2\">\n                            Add an image\n                          </Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={12} style={{textAlign:'Center'}}>\n                          <Button bsStyle=\"info\" style={{marginTop:'10px',width:'100%'}} simple fill type=\"submit\">\n                            Share with Community\n                          </Button>\n                        </Col>\n                    </Row>\n                  </form>\n\n                }\n              />\n            </Col>\n          </Row>\n          { posts.map((post,key) => {\n            return(\n            <Row key={key}>\n              <Col md={6}>\n              <Post post={post} currentUser={this.props.currentUser} />\n              </Col>\n            </Row>\n          );\n          })\n        }\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default PostList;\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { Grid, Row, Col} from \"react-bootstrap\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport GroupImage from 'assets/img/group.jpg';\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport {SERVER_URL} from \"constants/nodeserver\";\n\nclass Login extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      invalidSiginError:'',\n      redirect:false,\n    }\n  }\n\n  componentDidMount(){\n    //var user = ls.get('currentUser') || this.props.emptyUserTemplate;\n    if(this.props.currentUser.id){\n      this.setRedirect();\n    }\n    console.log('currentUser',this.props.currentUser);\n  }\n\n  setRedirect = () => {\n    this.setState({\n      redirect: true\n    })\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to='/posts' />\n    }\n  }\n\n  submitSignInForm = (event) => {\n      event.preventDefault();\n    console.log(\"SignIn Form is submitted!!\");\n\n    const inputEmail = event.target.elements.email.value;\n    const inputPassword = event.target.elements.password.value;\n    //let userMatched = false;\n\n    if(inputEmail === '' || inputPassword === ''){\n      console.log('Input email or password is empty');\n      return;\n    }\n\n    //The signin fetch call\n    fetch(''+SERVER_URL+'login', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: inputEmail,\n        password: inputPassword\n      })\n    }).then(response => response.json())\n    .then(user => {\n      console.log('User Login Result:' + user);\n      if(user.email){\n        //changing the currentUser to the user who just signed in\n        this.props.changeCurrentUser(user);\n        console.log(user.email);\n        this.setState({invalidSiginError:''});\n        this.setRedirect();\n      }else if(user === '-4'){\n        this.props.handleClick('User account not verfied yet. Please check your email for verification link', 3);\n        console.log(\"User account not verified yet\");\n      }else{\n        console.log('User Not Found');\n        this.props.handleClick('Sorry! Username or Password is incorrect', 3);\n        this.setState({invalidSiginError:'Invalid Username or Password'});\n      }\n    }) \n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n    {/*To check if the user logged in successfully then show the dashboard*/}\n      {this.renderRedirect()}\n        <Grid fluid>\n          <Row>\n\n            <Col md={6}>\n              <Card\n                title=\"SignIn\"\n                category=\"Please fill in your email and password to signin\"\n                content={\n                  <div>\n                    <form onSubmit={this.submitSignInForm} id='signinform'>\n                    <FormInputs\n                      ncols={[\"col-md-12\"]}\n                      proprieties={[\n                        {\n                          label: \"Email\",\n                          type: \"email\",\n                          bsClass: \"form-control\",\n                          placeholder: \"Email\",\n                          defaultValue: \"\",\n                          name:'email'\n                        }\n                      ]}\n                    />\n                    <FormInputs\n                      ncols={[\"col-md-12\"]}\n                      proprieties={[\n                        {\n                          label: \"Password\",\n                          type: \"password\",\n                          bsClass: \"form-control\",\n                          placeholder: \"Password\",\n                          defaultValue: \"\",\n                          name:'password'\n                        }\n                      ]}\n                    />\n                    <Row>\n                      <Col md={12} className='text-center font-weight-bold'>\n                      {this.state.invalidSiginError}\n                      </Col>\n                    </Row>\n                     <Row>\n                      <Col md={12} className=\"text-center\">\n                        <Button bsStyle=\"primary\" simple fill type=\"submit\">\n                          SignIn\n                        </Button>\n                      </Col>\n                    </Row>\n                   <div className=\"clearfix\" />\n                    </form>\n                  </div>\n                }/>\n            </Col>\n\n            <Col md={6} className='border border-primary bg-dark'>\n            <div className='card' >\n              <div className='image' style={{height:'333px'}}>\n              <img\n                className=\"img-fluid\"\n                src={GroupImage}\n                alt=\"...\"\n              />\n              </div>\n            </div>\n          \n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, {Component} from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport {SERVER_URL} from \"constants/nodeserver\";\r\n\r\n\r\nclass UserTab extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      redirect:false,\r\n      isRequestSent: ((this.props.user.frid === null)?false:true),\r\n    }\r\n  }\r\n\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true\r\n    })\r\n  }\r\n\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to='/chatBox' />\r\n    }\r\n  }\r\n\r\n  //user is the user whose profile is being shown in the usertab\r\n  //changeToUser is the method to change the toUser in the App.js; elevated state\r\n  //currentUser is the user who is currently logged in\r\n  handleChatClick = () => {\r\n      const {user, changeToUser, currentUser} = this.props;\r\n      if(!user.id || !currentUser.id || user.id.length === 0 || currentUser.id.length === 0){\r\n        console.log('user and/or currentUser are null or empty');\r\n        return;\r\n      } \r\n      changeToUser(user);\r\n      this.setRedirect();\r\n  }\r\n\r\n  sendFriendRequest = () => {\r\n     const {user, currentUser} = this.props;\r\n     console.log('CurrentUser firstname is ', currentUser.firstname, ' and the user firstname is ', user.firstname);\r\n     if(!user.id || !currentUser.id || user.id.length === 0 || currentUser.id.length === 0){\r\n        console.log('user and/or currentUser are null or empty');\r\n        return;\r\n     } \r\n     fetch(''+SERVER_URL+'sendFriendRequest', {\r\n          method: 'post',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            senderid: currentUser.id,\r\n            receiverid: user.id,\r\n          })\r\n        }).then(res => res.json())\r\n          .then(result => {console.log('Response for sending Friend request is ', result)\r\n                           if(!isNaN(result)){\r\n                              //to send the friend request to the receiver of the friend request      \r\n                              this.sendFriendRequestNotification();\r\n                              this.setState({isRequestSent:true})\r\n                           }\r\n                          })\r\n          .catch(err => console.log(err))\r\n  }\r\n\r\n   //using the synchronos version of the acceptFriendRequest calls the refetchFriendRequests\r\n   //method only after the database has been updated with the accepted friend request.\r\n   //In other words removes the usertab from the view once the user presses the accept button\r\n   acceptFriendRequestAS = async () => {\r\n    const {user, currentUser} = this.props;\r\n    if(!user.id || !currentUser.id || user.id.length === 0 || currentUser.id.length === 0){\r\n        console.log('user and/or currentUser are null or empty');\r\n        return;\r\n     } \r\n     try{\r\n       const response = await fetch(''+SERVER_URL+'acceptFriendRequest', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n              senderid: user.id,\r\n              receiverid: currentUser.id,\r\n            })\r\n          })\r\n       const result = await response.json();\r\n       console.log('Response for accepting Friend request is ', result);\r\n     }catch(error){\r\n       console.log(error);\r\n     }\r\n     this.acceptFriendRequestNotification();\r\n     this.props.refetchFriendRequests();    \r\n  }\r\n\r\n  deleteFriendRequest = () => {\r\n    const {user, currentUser} = this.props;\r\n    if(!user.id || !currentUser.id || user.id.length === 0 || currentUser.id.length === 0){\r\n        console.log('user and/or currentUser are null or empty');\r\n        return;\r\n     } \r\n    console.log('deleteFriendRequest called in UserTab for senderid and recieverid ', currentUser.id, user.id);\r\n    fetch(''+SERVER_URL+'deleteFriendRequest', {\r\n      method: 'post',\r\n      headers: {'Content-Type':'application/json'},\r\n      body: JSON.stringify({\r\n        receiverid: currentUser.id,\r\n        senderid: user.id,\r\n      })\r\n    }).then(res => res.json())\r\n    .then(result => {\r\n                      console.log('The result of deleteFriendRequest is ', result);\r\n                      if(!isNaN(result)){\r\n                        this.setState({isRequestSent:false})\r\n                      }\r\n                     })\r\n    .catch(err => console.log('Error occured while deleting friend request', err))\r\n  }\r\n\r\n\r\n\r\n\r\n    deleteFriendRequestAS = async () => {\r\n    const {user, currentUser} = this.props;\r\n    if(!user.id || !currentUser.id || user.id.length === 0 || currentUser.id.length === 0){\r\n        console.log('user and/or currentUser are null or empty');\r\n        return;\r\n     } \r\n    console.log('deleteFriendRequest called in UserTab for senderid and recieverid ', currentUser.id, user.id);\r\n    try{\r\n      const response = await fetch(''+SERVER_URL+'deleteFriendRequest', {\r\n        method: 'post',\r\n        headers: {'Content-Type':'application/json'},\r\n        body: JSON.stringify({\r\n          receiverid: currentUser.id,\r\n          senderid: user.id,\r\n        })\r\n      })\r\n      const result = await response.json();\r\n      console.log('The result of deleteFriendRequest is ', result);\r\n                      // if(!isNaN(result)){\r\n                      //   this.setState({isRequestSent:false})\r\n                      // }\r\n     }catch(err){\r\n      console.log('Error occured while deleting friend request', err)\r\n    }\r\n    this.props.refetchFriendRequests();    \r\n  }\r\n\r\n  sendFriendRequestNotification = () => {\r\n    const {user, currentUser} = this.props;\r\n    fetch(''+SERVER_URL+'sendNotificationSingle', {\r\n      method: 'post',\r\n      headers: {'Content-Type':'application/json'},\r\n      body: JSON.stringify({\r\n        creator_id : currentUser.id,\r\n        message_body: (currentUser.firstname + ' ' + currentUser.lastname + ' wants to be your friend'),\r\n        subject:'Friend Request',\r\n        recipient_type: 'SINGLE',\r\n        recipient_id: user.id\r\n      })\r\n    }).then(res => res.json())\r\n    .then(result => console.log('The result of sendFriendRequestNotification is ', result))\r\n    .catch(err => console.log('Error occured while sending friend request notificaiton in UserTab'))\r\n  }\r\n\r\n\r\n  acceptFriendRequestNotification = () => {\r\n    const {user, currentUser} = this.props;\r\n    fetch(''+SERVER_URL+'sendNotificationSingle', {\r\n      method: 'post',\r\n      headers: {'Content-Type':'application/json'},\r\n      body: JSON.stringify({\r\n        creator_id : currentUser.id,\r\n        message_body: (currentUser.firstname + ' ' + currentUser.lastname + ' accepted your friend request'),\r\n        subject:'Accepted Friend Request',\r\n        recipient_type: 'SINGLE',\r\n        recipient_id: user.id\r\n      })\r\n    }).then(res => res.json())\r\n    .then(result => console.log('The result of acceptFriendRequestNotification is ', result))\r\n    .catch(err => console.log('Error occured while accepting friend request notificaiton in UserTab'))\r\n  }\r\n\r\n  render(){\r\n    const {user, cardType} = this.props;\r\n    //const isRequestSent = (user.frid === null)?false:true;\r\n    //this.setState({isRequestSent})\r\n    const imgSrc = 'https://res.cloudinary.com/awesomedeveloper/image/upload/c_scale,h_300,w_300/' + user.profileimageid;\r\n    // if(user.id == currentUser.id){\r\n    //   return(\r\n    //     <div className=\"card\" style={{padding:'10px',width: '220px', border:'3px solid gray', fontFamily:'inherit', marginLeft:'auto',marginRight:'auto'}}>\r\n    //     {this.renderRedirect()}\r\n    //   <div className=\"card-img-top text-center\" style={{borderRadius:'3px'}}>\r\n    //     <img style={{width:'192px', border:'1px solid black'}} src={imgSrc} alt=\"Profile\"/>\r\n    //   </div>\r\n    //     <div className=\"card-body\" style={{marginTop:'5px'}}>\r\n    //       <b className=\"card-title\" style={{fontSize:'1.8rem'}}>{user.firstname + \" \" + user.lastname}</b>\r\n    //       <p style={{fontSize:'1.4rem'}}>{user.tagline}</p>\r\n    //       <button  className=\"btn btn-primary\">Modify Your Account</button>\r\n    //     </div>\r\n    //   </div>\r\n    //   );\r\n    //}\r\n    \r\n    if(user.friendsid !== null && user.friendsid !== undefined){\r\n       return(\r\n        <div className=\"card\" style={{padding:'10px',width: '220px', border:'3px solid gray', fontFamily:'inherit', marginLeft:'auto',marginRight:'auto'}}>\r\n        {this.renderRedirect()}\r\n      <div className=\"card-img-top text-center\" style={{borderRadius:'3px'}}>\r\n        <img style={{width:'192px', border:'1px solid black'}} src={imgSrc} alt=\"Profile\"/>\r\n      </div>\r\n        <div className=\"card-body\" style={{marginTop:'5px'}}>\r\n          <b className=\"card-title\" style={{fontSize:'1.8rem'}}>{user.firstname + \" \" + user.lastname}</b>\r\n          <p style={{fontSize:'1.4rem'}}>{user.tagline}</p>\r\n          <button onClick={this.handleChatClick} className=\"btn btn-primary\">Chat</button>\r\n          <button className=\"btn btn-primary\" style={{marginLeft:'10px'}}>\r\n           Friends\r\n           <i className=\"fa fa-check\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      );\r\n    }\r\n    if(cardType === 'community'){\r\n      return(\r\n        <div className=\"card\" style={{padding:'10px',width: '220px', border:'3px solid gray', fontFamily:'inherit', marginLeft:'auto',marginRight:'auto'}}>\r\n        {this.renderRedirect()}\r\n      <div className=\"card-img-top text-center\" style={{borderRadius:'3px'}}>\r\n        <img style={{width:'192px', border:'1px solid black'}} src={imgSrc} alt=\"Profile\"/>\r\n      </div>\r\n        <div className=\"card-body\" style={{marginTop:'5px'}}>\r\n          <b className=\"card-title\" style={{fontSize:'1.8rem'}}>{user.firstname + \" \" + user.lastname}</b>\r\n          <p style={{fontSize:'1.4rem'}}>{user.tagline}</p>\r\n          <button onClick={this.handleChatClick} className=\"btn btn-primary\">Chat</button>\r\n          {\r\n            (this.state.isRequestSent)\r\n             // ? (<button onClick={() => {this.deleteFriendRequest(user.frid)}} className=\"btn btn-danger\" style={{marginLeft:'10px'}}>Cancel</button>)\r\n              ? (<button className=\"btn btn-success disabled\" style={{marginLeft:'10px'}}>Request Sent</button>)\r\n              : (<button onClick={this.sendFriendRequest} className=\"btn btn-primary\" style={{marginLeft:'10px'}}>Add Friend</button>)\r\n          }\r\n        </div>\r\n      </div>\r\n      );\r\n    }\r\n    if(cardType === 'friendRequest'){\r\n        return(\r\n        <div className=\"card\" style={{padding:'10px',width: '220px', border:'3px solid gray', fontFamily:'inherit', marginLeft:'auto',marginRight:'auto'}}>\r\n        {this.renderRedirect()}\r\n      <div className=\"card-img-top text-center\" style={{borderRadius:'3px'}}>\r\n        <img style={{width:'192px', border:'1px solid black'}} src={imgSrc} alt=\"Profile\"/>\r\n      </div>\r\n        <div className=\"card-body\" style={{marginTop:'5px'}}>\r\n          <b className=\"card-title\" style={{fontSize:'1.8rem'}}>{user.firstname + \" \" + user.lastname}</b>\r\n          <p style={{fontSize:'1.4rem'}}>{user.tagline}</p>\r\n          <button onClick={this.acceptFriendRequestAS} className=\"btn btn-primary\">Accept</button>\r\n          <button onClick={this.deleteFriendRequestAS} className=\"btn btn-primary\" style={{marginLeft:'10px'}}>Delete</button>\r\n        </div>\r\n      </div>\r\n      );\r\n    }else{\r\n      return <h5> No CardType specified </h5>\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserTab;\r\n// const UserTab = (props) => {\r\n//   return (\r\n//    <div style={{width:'320px', border:'3px solid gray',overflow:'hidden'}}>\r\n//     <div id='image' style={{verticalAlign:'middle',display:'inline-block', padding:'5px', width:'110px'}}>\r\n//       <img src='https://res.cloudinary.com/awesomedeveloper/image/upload/c_scale,h_100,q_auto,w_100/v1548806356/UniteImages/paqgimjtqsupt4yhm3xg.jpg' />\r\n//     </div>  \r\n//     <div id='content' style={{display:'inline-block',width:'200px', height:'110px'}}>\r\n//       <div style={{width:'inherit'}}><b style={{fontSize:'2rem'}}>Onkar Singh</b></div>\r\n//       <div style={{width:'inherit'}}> I am Awesome</div>\r\n//     </div>\r\n//    </div>\r\n//   );\r\n// };","import React, { Component } from \"react\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom'\nimport Card from \"components/Card/Card\";\nimport UserTab from 'components/UserTab/UserTab.jsx';\nimport {SERVER_URL} from \"constants/nodeserver\";\n\nclass Community extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      usersArray : [],\n    }\n  }\n\n  //To redirect the user to login page if no valid user is signed in\n  redirectToLogin = () => {\n    //console.log('redirectToLogin called in TableList')\n    const currentUser = this.props.currentUser;\n    if(currentUser.id == null || currentUser.id.toString().length === 0){\n      console.log('Redirecting to login page from Community')\n      return <Redirect to='/login' />\n    }else{\n      //console.log('redirectToLogin to login did not redirect')\n      return null;\n    }\n  }\n\n  componentDidMount(){\n    const {currentUser} = this.props;\n    const searchUserKeyword = this.props.searchUserKeyword;\n\n    if(!currentUser.id || currentUser.id.length === 0){\n        console.log('Warning currentUser is null or empty in Community.jsx in componentDidMount');\n        return;\n     } \n\n    // if(searchUserKeyword !== null){\n    //   this.fetchSearchUsers(searchUserKeyword);\n    //   return;\n    // }\n    fetch(''+SERVER_URL+'getAllUsersCommunity',{\n        method: 'post',\n        headers: {'Content-Type': 'application/json',\n          },\n        body: JSON.stringify({\n            userid: currentUser.id \n        })\n      })\n      .then(response => response.json())\n      .then(users => {  \n        const mUsers = this.makeUserIdString(users)\n        this.setState({usersArray: mUsers})\n              console.log('all usersArray now is: ',mUsers)})\n      .catch(err => console.log(err))\n  }\n\n  componentDidUpdate(prevProps) {\n  // Typical usage (don't forget to compare props):\n  if (this.props.searchUserKeyword !== prevProps.searchUserKeyword) {\n    this.fetchSearchUsers();\n  }\n}\n\n  fetchSearchUsers = () => {\n    const searchKeyword = this.props.searchUserKeyword;\n    console.log('running fetchSearchUsers with keyword ', searchKeyword)\n      fetch(''+SERVER_URL+'searchUsersv2',{\n        method: 'post',\n        headers: {'Content-Type': 'application/json',\n          },\n        body: JSON.stringify({\n            searchKeyword,\n            userid: this.props.currentUser.id,\n        })\n      })\n      .then(response => response.json())\n      .then(users => {  \n        const mUsers = this.makeUserIdString(users)\n        this.setState({usersArray: mUsers})\n              console.log('searched usersArray is: ',mUsers)})\n      .catch(err => console.log(err))\n  }\n\n  makeUserIdString = (users) => {\n    const mArray = users.map(user => {\n      user.id = user.id.toString();\n      return user;\n    })\n    return mArray;\n  }\n\n  render() {\n    var displayContent;\n    if(this.state.usersArray.length > 0){\n      displayContent = <Row>\n                    {\n                      this.state.usersArray.map((prop) => {\n                      return (\n                        <Col\n                          lg={4}\n                          md={4}\n                          sm={6}\n                          xs={12}\n                          key={prop.id}\n                        >\n                          <UserTab cardType='community' currentUser={this.props.currentUser} user={prop} key={prop.id} changeToUser={this.props.changeToUser} />\n                        </Col>\n                      );\n                    })\n                    \n                    }\n                  </Row>\n                  \n    }if(this.state.usersArray.length == 0){\n      displayContent = <div>\n                          <span>Loading...</span>\n                       </div>\n    } \n    return (\n      <div className=\"content\">\n      {this.redirectToLogin()}\n        <Grid fluid>\n          <Row>\n            <Col md={12}>\n              <Card\n                title=\"Our Community\"\n                ctAllIcons\n                category={\n                  <span>\n                    Handcrafted by our creator <b>Onkar Singh</b>\n                  </span>\n                }\n                content={displayContent}\n              />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Community;\n","import Analytics from \"views/Analytics/Analytics\";\nimport Signup from \"views/Signup/Signup.jsx\";\nimport PostList from \"views/PostList/PostList\";\nimport Login from \"views/Login/Login.jsx\";\nimport Community from \"views/Community/Community\";\nimport ChatBox from 'views/ChatBox/ChatBox';\nimport Verification from 'views/Verification/Verification';\nimport PendingRequests from 'views/FriendRequests/PendingRequests'\n\nconst dashboardRoutes = [\n  // {\n  //   path: \"/analytics\",\n  //   name: \"Analytics\",\n  //   icon: \"pe-7s-graph\",\n  //   component: Analytics\n  // },\n  {\n    path: \"/signup\",\n    name: \"User Signup\",\n    icon: \"pe-7s-user\",\n    component: Signup\n  },\n  {\n    path: \"/posts\",\n    name: \"Posts\",\n    icon: \"pe-7s-note2\",\n    component: PostList\n  },\n  {\n    path: \"/login\",\n    name: \"Login\",\n    icon: \"pe-7s-news-paper\",\n    component: Login,\n  },\n  { path: \"/community\", name: \"Community\", icon: \"pe-7s-science\", component: Community },\n  { path: \"/chatbox\", name: \"ChatBox\", icon: \"pe-7s-science\", component: ChatBox, invisible: true },\n  { path: \"/verify\", name: \"Verification\", component: Verification, invisible: true },\n  {\n    path: \"/pendingrequests\",\n    name: \"Pending Requests\",\n    icon: \"pe-7s-rocket\",\n    component: PendingRequests\n  },\n  { redirect: true, path: \"/\", to: \"/login\", name: \"Login\" }\n];\n\nexport default dashboardRoutes;\n","import React, {Component} from 'react';\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col\r\n} from \"react-bootstrap\";\r\nimport io from \"socket.io-client\";\r\nimport { Card } from \"components/Card/Card.jsx\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport {SERVER_URL} from \"constants/nodeserver\";\r\n \r\nclass ChatBox extends Component{\r\n\tconstructor(props){\r\n\t\t\tsuper(props);\r\n\t\t\tthis.state={\r\n\t\t\t\tchat:[],\r\n\t\t\t\tmessage:'',\r\n\t\t\t\tisOtherUserOnline: false,\r\n\t\t\t\tcurrentSocket:{},\r\n\t\t\t}\r\n\r\n\t    this.socket = io(SERVER_URL);\r\n\t    console.log('this.socket is ', this.socket);\r\n\t    //this.setState({currentSocket:this.socket});\r\n        const chatRoomId = this.createChatRoomId();\r\n        this.socket.emit('enrollChatRoom', {chatRoomId: chatRoomId})\r\n        this.sendMessage = ev => {\r\n            ev.preventDefault();\r\n        \tconst message = ev.target.elements.message.value;\r\n        \tif(message === null || message.length === 0){\r\n        \t\tconsole.log('Chat Msg length zero')\r\n        \t\treturn;\r\n        \t}\r\n\t\t    this.socket.emit('SEND_MESSAGE', {\r\n\t\t        fromuserid: this.props.currentUser.id,\r\n\t\t\t    touserid: this.props.toUser.id,\r\n\t\t\t    message:ev.target.elements.message.value\r\n\t\t    });\r\n\t\t    this.setState({message: ''});\r\n\t\t    ev.target.elements.message.value = ''; //to clear the msg input box\r\n\t\t}\r\n\t\tthis.socket.on('RECEIVE_MESSAGE', function(data){\r\n    \t\taddMessage(data);\r\n\t\t});\r\n\t\tconst addMessage = data => {\r\n\t\t    console.log(data);\r\n\t\t    this.setState({chat: [...this.state.chat, data]});\r\n\t\t    console.log('Socket chat is ',this.state.chat);\r\n\t\t    this.scrollToBottomS();\r\n\t\t};\r\n\t\tthis.socket.on('DISCONNECTED', function(){\r\n    \t\tthis.setState({isOtherUserOnline: false});\r\n\t\t});\r\n\t\tthis.socket.on('CONNECTED', function (){\r\n    \t\tthis.setState({isOtherUserOnline: true});\r\n\t\t});\r\n\t\tthis.scrollToBottomS = () => {\r\n\t\tconst msgDiv = document.getElementById(\"msgDiv\");\r\n\t\tconsole.log('msgDiv',msgDiv)\r\n     \tmsgDiv.scrollTop = msgDiv.scrollHeight - msgDiv.clientHeight;\r\n\t\t}\t\t\r\n\r\n\t}  //end of construtor\r\n\r\n\t//To redirect the user to login page if no valid user is signed in\r\n\tredirectToLogin = () => {\r\n\t    console.log('redirectToLogin called in TableList')\r\n\t    const currentUser = this.props.currentUser;\r\n\t    if(currentUser.id == null || currentUser.id.toString().length === 0){\r\n\t      console.log('Redirecting to login page')\r\n\t      return <Redirect to='/login' />\r\n\t    }else{\r\n\t      console.log('redirectToLogin to login did not redirect')\r\n\t      return null;\r\n\t    }\r\n\t}\r\n\r\n\tcreateChatRoomId = () => {\r\n\t\t\tconst cu = this.props.currentUser.id;\r\n\t\t\tconst tu = this.props.toUser.id;\r\n\t\t\tif(cu > tu){\r\n\t\t\t\treturn ''+tu + \"#\" + cu;\r\n\t\t\t}else{\r\n\t\t\t\treturn ''+cu + \"#\" + tu;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.retrieveMessages();\r\n\t}\r\n\r\n\tcomponentWillUnmount(){\r\n\t\t//disconnecting the chatsocket\r\n\t\tthis.socket.disconnect();\r\n\t}\r\n\r\n\tretrieveMessages = () =>{\r\n\t\tconsole.log(\"retrieveMessages ran now\")\r\n\t\tfetch(''+SERVER_URL+'getLimitedMessages', {\r\n\t\t\t    method: 'post',\r\n\t\t\t    headers: {'Content-Type': 'application/json'},\r\n\t\t\t    body: JSON.stringify({\r\n\t\t\t    \tfromUserId: this.props.currentUser.id,\r\n\t\t\t    \ttoUserId: this.props.toUser.id,\r\n\t\t\t    })\r\n\t\t    }).then(res => res.json())\r\n\t\t\t.then(chat => {\r\n\t\t\t\tchat.reverse(); //to reverse the chats so that they are displayed accordingly\r\n\t\t\t\t//As the server is returning a limited chat ordered by desc date\r\n\t\t\t\tconsole.log('retrieveMessages retrived chat', chat);\r\n\t\t\t\tthis.setState({chat:chat})\r\n\t\t\t\t})\r\n\t\t\t.catch(err => console.log('Error in retrieveMessages in Chatbox',err))\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {currentUser, toUser} = this.props;\r\n\t\tconst chat = this.state.chat;\r\n\t\tcurrentUser.id = currentUser.id + \"\";\r\n//ba bg-dark-red white pa1 ph3 br4\r\n\t\tconst msgDialogs = chat.map((msg,i) => {\r\n\t\t\tconsole.log('id comparison',i,msg.fromuserid, currentUser.id, msg.fromuserid.toString() === currentUser.id.toString())\r\n\t\t\tif(msg.fromuserid.toString() === currentUser.id.toString()){\r\n\t\t\t\treturn \t<div style={{padding:'5px', textAlign:'right',marginBottom:'5px'}} key={i}><span className='msgSpanCurrentUser' >{msg.message}</span></div>\r\n\t\t\t}else {\r\n\t\t\t\treturn \t<div style={{padding:'5px', textAlign:'left',marginBottom:'5px'}} key={i}><span className='msgSpanToUser'>{msg.message}</span></div>\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn(\r\n\t\t <div className=\"content\" >\r\n\t\t {this.redirectToLogin()}\r\n\t         <Grid fluid>\r\n\t          <Row>\r\n\t            <Col lg={6}\r\n\t            \t md={7}\r\n\t            \t sm={8}>\r\n\t              <Card\r\n\t                title=\"ChatBox\"\r\n\t                content={\r\n\t                \t<div className='card' style={{padding:'10px'}}>\r\n\t                \t\t<div>\r\n\t                \t\t\t<h4 style={{marginTop:'0px'}}>{toUser.firstname + \" \" + toUser.lastname}</h4>\r\n\t                \t\t\t<h5>{this.state.isOtherUserOnline ? 'Online' : 'Offline'}</h5>\r\n\t                \t\t</div>\r\n\t                \t\t<hr className='hrline'/>\r\n\t                \t\t<div style={{height:'350px', overflowY: 'auto'}} id='msgDiv'>\r\n\t                \t\t\t{/* Insert the chat here */\r\n\t                \t\t\t\tmsgDialogs\r\n\t                \t\t\t}\r\n\t                \t\t</div>\r\n\t                \t\t<hr className='hrline'/>\r\n\t                \t\t<div>\r\n\t                \t\t\t<form method='post' onSubmit={this.sendMessage}>\r\n\t                \t\t\t\t<input style={{width:'75%', display:'inline-block', border: '2px solid gray'}} className='form-control' type='text' name='message' id='inputMessage' placeholder='Type your messgage to send'/>\r\n\t                \t\t        <button style={{width:'15%',minWidth:'60px', display:'inline-block', marginLeft:'10px',textAlign:'center'}} className='btn btn-primary'>Send</button>\t    \r\n\t                \t\t\t</form>\r\n\t                \t\t</div>\r\n\t                \t</div>\r\n\t                }\r\n\t              />\r\n\t             </Col>\r\n\t           </Row>\r\n\t          </Grid>\r\n         </div>   \r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ChatBox;","import React, {Component} from 'react';\r\nimport {SERVER_URL} from 'constants/nodeserver';\r\n\r\nclass Verification extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvStatus: 10 //vStatus 10 means loading\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tlet search = window.location.search;\r\n\t\tlet params = new URLSearchParams(search);\r\n\t\tlet id = params.get('id');\r\n\t\tlet email = params.get('email');\r\n\t\t//console.log('id', id, 'email', email);\r\n\r\n\t\t//The verification call\r\n\t    fetch(SERVER_URL+'verify', {\r\n\t      method: 'post',\r\n\t      headers: {'Content-Type': 'application/json'},\r\n\t      body: JSON.stringify({\r\n\t        email: email,\r\n\t        id: id\r\n\t      })\r\n\t    }).then(response => response.json())\r\n\t    .then(result => {\r\n\t    \tthis.setState({vStatus: result.toString()});\r\n\t    \tconsole.log('result of verify from backend is', result)\r\n\t    })\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst currHost = window.location.origin; //returns the protocol + hostname of the react frontend\r\n\t\tvar displayContent = null;\r\n\t\tconsole.log(\"vStatus in state is\", this.state.vStatus);\r\n\t\tif(this.state.vStatus === '1'){\r\n\t\t\tdisplayContent = <div>\r\n\t\t\t\t\t\t\t\t<h3>Verfication Status: Verified</h3>\r\n\t\t\t\t\t\t\t\t<a href = {currHost + \"/login\"}> Login Here To Continue</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t}else if(this.state.vStatus === '-3'){\r\n\t\t\tdisplayContent = <div>\r\n\t\t\t\t\t\t\t\t<h3>Your account is already verified</h3>\r\n\t\t\t\t\t\t\t\t<a href = {currHost + \"/login\"}> Login Here To Continue</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t}else{\r\n\t\t\tdisplayContent = <div>\r\n\t\t\t\t\t\t\t<h3>Verification Failed!</h3>\r\n\t\t\t\t\t\t\t<h4>Please contact your system administrator for more information</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t}\r\n\r\n\t\r\n\t\treturn(\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t{displayContent}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Verification;","import React, { Component } from \"react\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport Card from \"components/Card/Card\";\r\nimport UserTab from 'components/UserTab/UserTab.jsx';\r\nimport {SERVER_URL} from \"constants/nodeserver\";\r\n\r\nclass PendingRequests extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      usersArray : [],\r\n    }\r\n  }\r\n\r\n  //To redirect the user to login page if no valid user is signed in\r\n  redirectToLogin = () => {\r\n    console.log('redirectToLogin called in PendingRequests')\r\n    const currentUser = this.props.currentUser;\r\n    if(currentUser.id == null || currentUser.id.toString().length === 0){\r\n      console.log('Redirecting to login page')\r\n      return <Redirect to='/login' />\r\n    }else{\r\n      console.log('redirectToLogin to login did not redirect')\r\n      return null;\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n   this.refetchFriendRequests();\r\n  }\r\n\r\n  refetchFriendRequests = () => {\r\n     const {currentUser} = this.props;\r\n     fetch(''+SERVER_URL+'getFriendRequests', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n              userid: currentUser.id,\r\n            })\r\n          })\r\n        .then(response => response.json())\r\n        .then(users => {  \r\n          const mUsers = this.makeUserIdString(users)\r\n          this.setState({usersArray: mUsers})\r\n                console.log(mUsers)})\r\n        .catch(err => console.log(err))\r\n  }\r\n\r\n  makeUserIdString = (users) => {\r\n    const mArray = users.map(user => {\r\n      user.id = user.id.toString();\r\n      return user;\r\n    })\r\n    return mArray;\r\n  }\r\n\r\n  // render() {\r\n  //   const {currentUser} = this.props;\r\n  //   if(this.state.usersArray.length === 0){\r\n  //     return\r\n  //   }\r\n  //   return (\r\n  //     <div className=\"content\">\r\n  //     {this.redirectToLogin()}\r\n  //       <Grid fluid>\r\n  //         <Row>\r\n  //           <Col md={12}>\r\n  //             <Card\r\n  //               title=\"People who want to be your friend\"\r\n  //               ctAllIcons\r\n  //               category={\r\n  //                 <span>\r\n  //                   You're a lucky person <b>{currentUser.firstname}</b>\r\n  //                 </span>\r\n  //               }\r\n  //               content={\r\n  //                 <Row>\r\n  //                   {\r\n  //                     this.state.usersArray.map((prop) => {\r\n  //                     return (\r\n  //                       <Col\r\n  //                         lg={4}\r\n  //                         md={4}\r\n  //                         sm={6}\r\n  //                         xs={12}\r\n  //                         key={prop.id}\r\n  //                       >\r\n  //                         <UserTab cardType='friendRequest' \r\n  //                                  currentUser={this.props.currentUser} \r\n  //                                  user={prop} key={prop.id}\r\n  //                                  refetchFriendRequests = {this.refetchFriendRequests} />\r\n  //                       </Col>\r\n  //                     );\r\n  //                   })\r\n                    \r\n  //                   }\r\n  //                 </Row>\r\n  //               }\r\n  //             />\r\n  //           </Col>\r\n  //         </Row>\r\n  //       </Grid>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n    const {currentUser} = this.props;\r\n      var displayContent = \"\";\r\n    if(this.state.usersArray.length > 0){\r\n      displayContent = <Row>\r\n                    {\r\n                      this.state.usersArray.map((prop) => {\r\n                      return (\r\n                        <Col\r\n                          lg={4}\r\n                          md={4}\r\n                          sm={6}\r\n                          xs={12}\r\n                          key={prop.id}\r\n                        >\r\n                          <UserTab cardType='friendRequest' \r\n                                   currentUser={this.props.currentUser} \r\n                                   user={prop} key={prop.id}\r\n                                   refetchFriendRequests = {this.refetchFriendRequests} />\r\n                        </Col>\r\n                      );\r\n                    })\r\n                    \r\n                    }\r\n                  </Row>\r\n    }else if(this.state.usersArray.length === 0){\r\n      displayContent = <h5>No friend requests yet :(</h5>;\r\n    }\r\n    return (\r\n      <div className=\"content\">\r\n      {this.redirectToLogin()}\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Card\r\n                title=\"People who want to be your friend\"\r\n                ctAllIcons\r\n                category={\r\n                  <span>\r\n                    You're a lucky person <b>{currentUser.firstname}</b>\r\n                  </span>\r\n                }\r\n                content={displayContent}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PendingRequests;\r\n","import React, { Component } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom'\n\nimport HeaderLinks from \"./HeaderLinks.jsx\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\n    this.state = {\n      sidebarExists: false\n    };\n  }\n\n  redirectToLogin = () => {\n    const currentUser = this.props.currentUser;\n    if(currentUser.id == null || currentUser.id.toString().length === 0){\n      console.log('Redirecting to login page')\n      return <Redirect to='/login' />\n    }else{\n      console.log('user exists')\n    }\n  }\n\n  // mobileSidebarToggle(e) {\n  //   if (this.state.sidebarExists === false) {\n  //     this.setState({\n  //       sidebarExists: true\n  //     });\n  //   }\n  //   e.preventDefault();\n  //   document.documentElement.classList.toggle(\"nav-open\");\n  //   var node = document.createElement(\"div\");\n  //   node.id = \"bodyClick\";\n  //   node.onclick = function() {\n  //     this.parentElement.removeChild(this);\n  //     document.documentElement.classList.toggle(\"nav-open\");\n  //   };\n  //   document.body.appendChild(node);\n  // }\n\n\n   mobileSidebarToggle(e) {\n    if (this.state.sidebarExists === false) {\n      this.setState({\n        sidebarExists: true\n      });\n    }\n    e.preventDefault();\n    document.documentElement.classList.toggle(\"nav-open\");\n    var node = document.createElement(\"div\");\n    node.id = \"bodyClick\";\n    node.onclick = function() {\n      this.parentElement.removeChild(this);\n      document.documentElement.classList.toggle(\"nav-open\");\n    };\n    document.body.appendChild(node);\n   }\n  \n  getBrand() {\n    var name;\n    dashboardRoutes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n      return null;\n    });\n    return name;\n  }\n  render() {\n    // var rightNav = <div>\n    //                 <HeaderLinks \n    //                 currentUser={this.props.currentUser} \n    //                 changeSearchUserKeyword={this.props.changeSearchUserKeyword}\n    //                 logoutUser = {this.props.logoutUser}\n    //                  />\n    //               </div>;\n      var rightNav = <Navbar.Collapse>\n                    <HeaderLinks \n                    currentUser={this.props.currentUser} \n                    changeSearchUserKeyword={this.props.changeSearchUserKeyword}\n                    logoutUser = {this.props.logoutUser}\n                     />\n                  </Navbar.Collapse>;\n    if(this.props.currentUser.id.toString().length === 0){\n      rightNav = null;\n    }\n    return ( \n      <Navbar fluid>\n        <Navbar.Header>\n          <Navbar.Brand>\n             <a href=\"#pablo\">{this.getBrand()}</a>\n          </Navbar.Brand>\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\n        </Navbar.Header>\n        {rightNav}\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Grid } from \"react-bootstrap\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Grid fluid>\n          <nav className=\"pull-left\">\n            <ul>\n              <li>\n                <a href=\"#pablo\">Home</a>\n              </li>\n              <li>\n                <a href=\"#pablo\">Company</a>\n              </li>\n              <li>\n                <a href=\"#pablo\">Portfolio</a>\n              </li>\n              <li>\n                <a href=\"#pablo\">Blog</a>\n              </li>\n            </ul>\n          </nav>\n          <p className=\"copyright pull-right\">\n            &copy; {new Date().getFullYear()}{\" \"}\n            <a href=\"http://www.creative-tim.com\">Sheridan Unite</a>, made with\n            love for a better web\n          </p>\n        </Grid>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport HeaderLinks from \"../Header/HeaderLinks.jsx\";\nimport imagine from \"assets/img/sidebar-3.jpg\";\nimport logo from \"assets/img/reactlogo.png\";\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth\n    };\n  }\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  updateDimensions() {\n    this.setState({ width: window.innerWidth });\n  }\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n  render() {\n    const sidebarBackground = {\n      backgroundImage: \"url(\" + imagine + \")\"\n    };\n    var sidebarHeaderLink = null; \n    if(this.props.currentUser.id.toString().length !== 0){\n      sidebarHeaderLink = <HeaderLinks \n                      currentUser={this.props.currentUser} \n                      changeSearchUserKeyword={this.props.changeSearchUserKeyword}\n                      logoutUser = {this.props.logoutUser}\n                    />\n    }        \n    return (\n      <div\n        id=\"sidebar\"\n        className=\"sidebar\"\n        data-color=\"black\"\n        data-image={imagine}\n      >\n        <div className=\"sidebar-background\" style={sidebarBackground} />\n        <div className=\"logo\">\n          <a\n            href=\"#\"\n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n              <img src={logo} alt=\"logo_image\" />\n            </div>\n          </a>\n          <a\n            href=\"#\"\n            className=\"simple-text logo-normal\"\n          >\n            Sheridan Unite\n          </a>\n        </div>\n        <div className=\"sidebar-wrapper\">\n          <ul className=\"nav\">\n            {\n            this.state.width <= 991 ? sidebarHeaderLink : null\n            }\n            {dashboardRoutes.map((prop, key) => {\n              //To display only signin and signup when user isn't signed in\n              if(this.props.currentUser.id === ''){\n                if(prop.name !== 'Login' && prop.name !== 'User Signup')\n                  return null\n              }\n              if(this.props.currentUser.id !== ''){\n                if(prop.name == 'User Signup')\n                  return null\n              }\n              //if user is logged in and the prop is login then don't show it on the sidebar\n              if(prop.name === 'Login' && this.props.currentUser.id !== ''){ //If the user is logged in and the componenet is login then don't return null\n                  return null;\n              }\n              if(prop.invisible){\n               return null;   \n              }\n              if (!prop.redirect)\n                return (\n                  <li\n                    className={\n                      prop.upgrade\n                        ? \"active active-pro\"\n                        : this.activeRoute(prop.path)\n                    }\n                    key={key}\n                  >\n                    <NavLink\n                      to={prop.path}\n                      className=\"nav-link\"\n                      activeClassName=\"active\"\n                    >\n                      <i className={prop.icon} />\n                      <p>{prop.name}</p>\n                    </NavLink>\n                  </li>\n                );\n              return null;\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import Dashboard from \"layouts/Dashboard/Dashboard.jsx\";\n\nvar indexRoutes = [\t\t\n\t\t\t\t\t\t{ path: \"/\", name: \"Dashboard\", component: Dashboard }\t\t\t\t\t\t\t\t\n\t\t\t\t  ];\n\nexport default indexRoutes;\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport NotificationSystem from \"react-notification-system\";\n\nimport Header from \"components/Header/Header\";\nimport Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\n\nimport { style } from \"variables/Variables.jsx\";\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleNotificationClick = this.handleNotificationClick.bind(this);\n    this.state = {\n      _notificationSystem: null,\n      currentUser: this.props.currentUser,\n      searchUserKeyword:'',\n    };\n  }\n\n  changeSearchUserKeyword = (keyword) => {\n    console.log('changeSearchUserKeyword called with keyword ', keyword);\n    this.setState({searchUserKeyword:keyword});\n  }\n\n  // handleNotificationClick(position) {\n  //   var color = Math.floor(Math.random() * 4 + 1);\n  //   var level;\n  //   switch (color) {\n  //     case 1:\n  //       level = \"success\";\n  //       break;\n  //     case 2:\n  //       level = \"warning\";\n  //       break;\n  //     case 3:\n  //       level = \"error\";\n  //       break;\n  //     case 4:\n  //       level = \"info\";\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   this.state._notificationSystem.addNotification({\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n  //     message: (\n  //       <div>\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n  //         every web developer.\n  //       </div>\n  //     ),\n  //     level: level,\n  //     position: position,\n  //     autoDismiss: 15\n  //   });\n  // }\n\n\n    handleNotificationClick(messageStr, notificationType) {\n    //var color = Math.floor(Math.random() * 4 + 1);\n    var level;\n    switch (notificationType) {\n      case 1:\n        level = \"success\";\n        break;\n      case 2:\n        level = \"warning\";\n        break;\n      case 3:\n        level = \"error\";\n        break;\n      case 4:\n        level = \"info\";\n        break;\n      default:\n        break;\n    }\n    this.state._notificationSystem.addNotification({\n      title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n      message: (\n        <div>\n          {messageStr}\n        </div>\n      ),\n      level: level,\n      position: 'tr',\n      autoDismiss: 10\n    });\n  }\n\n  componentDidMount() {\n    console.log('currentUser in dashboard',this.props.currentUser);\n    this.setState({ _notificationSystem: this.refs.notificationSystem });\n    var _notificationSystem = this.refs.notificationSystem;\n    // var color = Math.floor(Math.random() * 4 + 1);\n    // var level;\n    // switch (color) {\n    //   case 1:\n    //     level = \"success\";\n    //     break;\n    //   case 2:\n    //     level = \"warning\";\n    //     break;\n    //   case 3:\n    //     level = \"error\";\n    //     break;\n    //   case 4:\n    //     level = \"info\";\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // _notificationSystem.addNotification({\n    //   title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n    //   message: (\n    //     <div>\n    //       Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n    //       every web developer.\n    //     </div>\n    //   ),\n    //   level: level,\n    //   position: \"tr\",\n    //   autoDismiss: 15\n    // });\n  }\n  componentDidUpdate(e) {\n    //console.log('component did update ran in dashboard layout.')\n    // if (\n    //   window.innerWidth < 993 &&\n    //   e.history.location.pathname !== e.location.pathname &&\n    //   document.documentElement.className.indexOf(\"nav-open\") !== -1\n    // ) {\n    //   document.documentElement.classList.toggle(\"nav-open\");\n    // }\n    // if (e.history.action === \"PUSH\") {\n    //   document.documentElement.scrollTop = 0;\n    //   document.scrollingElement.scrollTop = 0;\n    //   this.refs.mainPanel.scrollTop = 0;\n    // }\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <NotificationSystem ref=\"notificationSystem\" style={style} />\n        <Sidebar {...this.props} />\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n          <Header {...this.props} \n            currentUser={this.props.currentUser}\n            changeSearchUserKeyword={this.changeSearchUserKeyword}\n            logoutUser = {this.props.logoutUser}\n             />\n          <Switch>\n            {dashboardRoutes.map((prop, key) => {\n              if (prop.redirect)\n                return <Redirect from={prop.path} to={prop.to} key={key} />;\n              if (true)\n                return (\n                  <Route\n                    path={prop.path}\n                    key={key}\n                    render={props => (\n                      <prop.component\n                        {...props}\n                        searchUserKeyword={this.state.searchUserKeyword}\n                        currentUser={this.props.currentUser}\n                        emptyUserTemplate = {this.props.emptyUserTemplate}\n                        changeCurrentUser={this.props.changeCurrentUser}\n                        toUser={this.props.toUser}\n                        changeToUser={this.props.changeToUser}\n                        handleClick={this.handleNotificationClick}\n                      />\n                    )}\n                  />\n                );\n              else\n                return null;\n            })}\n          </Switch>\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport indexRoutes from \"./routes/index.jsx\";\r\nimport ls from 'local-storage';\r\nimport SimpleCrypto from 'simple-crypto-js';\r\n\r\nclass App extends React.Component{\r\n\tsimpleCrypto = new SimpleCrypto('kgf');\r\n\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.emptyUserTemplate =  {\r\n\t\t\tfirstname:'',\r\n\t\t\tlastname:'',\r\n\t\t\tid:'',\r\n\t\t\tjoined:'',\r\n\t\t\ttagline:''\r\n\t\t }\r\n\t\tthis.state={\r\n\t\t  currentUser: this.decryptUser() || this.emptyUserTemplate,\r\n\t\t  toUser:this.emptyUserTemplate\r\n\t\t}\r\n\t}\r\n\r\n\tdecryptUser = () => {\r\n\t\tvar user;\r\n\t\tvar encryptedUser = ls.get('currentUser') || undefined;\r\n\t\t//console.log('decryptUser Method: encryptedUser is - ', encryptedUser);\r\n\t\tif(encryptedUser === undefined){\r\n\t\t\tuser = null;\r\n\t\t}\r\n\t\telse{\r\n\t\t  var userStr = this.simpleCrypto.decrypt(encryptedUser);\r\n\t\t  var userObj = JSON.parse(userStr);\r\n\t\t  user = userObj;\r\n\t\t}\r\n\t\t//console.log('User returning from decryptUser method is', user);\r\n\t\treturn user;\r\n\t}\r\n\r\n\tupdateEncryptUser = (user) => {\r\n\t\tvar userStr = JSON.stringify(user);\r\n\t\tvar encryptedUser = this.simpleCrypto.encrypt(userStr);\r\n\t\tls.set('currentUser', encryptedUser);\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\t//console.log('store',this.props.store.getState());\r\n\t}\r\n\r\n\r\n\tchangeCurrentUser = (user) => {\r\n\t\tif(user.id){\r\n\t\t\tthis.setState({currentUser:user});\r\n\t\t\tthis.updateEncryptUser(user);\r\n\t\t}\r\n\t\tconsole.log('changeCurrentUser in App.js called with user ', user);\r\n\t}\r\n\r\n\tlogoutUser = () => {\r\n\t\tconsole.log('Logout user called in App.js');\r\n\t\tls.clear();\r\n\t\tthis.setState({currentUser: this.emptyUserTemplate });\r\n\t}\r\n\r\n\tchangeToUser = (user) => {\r\n\t\tif(user.id){\r\n\t\t\tthis.setState({toUser:user});\r\n\t\t}\r\n\t\tconsole.log('changeToUser in App.js called with user ', user);\r\n\t}\r\n\r\n\r\n\t/*\r\n<Route\r\n        path=\"/about\"\r\n        render={props => <About {...props} extra={someVariable} />}\r\n      />\r\n\t\r\n\t {indexRoutes.map((prop, key) => {\r\n\t\t        return <Route to={prop.path} component={prop.component} key={key} />;\r\n\t\t      })}\r\n\t\t      */\r\n\r\n\t\r\n\trender(){\r\n\t\treturn(\r\n\t\t<BrowserRouter>\r\n\t\t      <Switch>\r\n            {indexRoutes.map((prop, key) => {\r\n            \t\r\n\t\t        return <Route to={prop.path} render={props => <prop.component {...props} \r\n\t\t        \t\t\t\t\t\t\t\t\tcurrentUser={this.state.currentUser}\r\n\t\t        \t\t\t\t\t\t\t\t\temptyUserTemplate = {this.emptyUserTemplate} \r\n\t\t        \t\t\t\t\t\t\t\t\tchangeCurrentUser={this.changeCurrentUser}\r\n\t\t        \t\t\t\t\t\t\t\t\tlogoutUser = {this.logoutUser}\r\n\t\t        \t\t\t\t\t\t\t\t\ttoUser={this.state.toUser}\r\n\t\t        \t\t\t\t\t\t\t\t\tchangeToUser={this.changeToUser}/>} key={key} />;\r\n\t\t      })}\r\n        </Switch>\r\n\t\t</BrowserRouter>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App.js'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/css/animate.min.css\";\nimport \"./assets/sass/light-bootstrap-dashboard.css?v=1.2.0\";\nimport \"./assets/css/demo.css\";\nimport \"./assets/css/mycss.css\";\nimport \"./assets/css/pe-icon-7-stroke.css\";\n\nReactDOM.render(\n  \t  <App />\n  \t ,document.getElementById(\"root\")\n);\n"],"sourceRoot":""}